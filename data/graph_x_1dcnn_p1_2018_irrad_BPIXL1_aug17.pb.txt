node {
  name: "input_1"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 13
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "input_2"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 2
        }
      }
    }
  }
}
node {
  name: "model/conv1d/conv1d/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/conv1d/conv1d/ExpandDims"
  op: "ExpandDims"
  input: "input_1"
  input: "model/conv1d/conv1d/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/conv1d/conv1d/ExpandDims_1/ReadVariableOp/resource"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
        }
        tensor_content: "XY\005\210Z\014\276>\366\336\247\276\014\231\340\276\320\250\017?\"\013\271\207\314\315|\277\356\351*\210\262\267\361\207\r\221\006?K\262\030\210\362\345\227\007\024H\302\207\325>\020\277\027L\246\207ym\337\207\324sV\2104\227 \276i(`\276\2268.>\004\272\205>\314\3175\210\271\346r\277Q\322\r\210\270\222;\210j\177\266\276\262\325)\210\017\224[\206\3128\'\210I\004\220>,\\\225\2069\277\002\210\260\310\221\010\352\356\303\276A_\n?\264\247\'?X\024\272\276nu\027\210\016\025\347>K\373\325\207\010\241\273\006v1\001?\225.\025\210~\315@\010O[&\210\035\310)\277\016\363/\210\24744\210"
      }
    }
  }
}
node {
  name: "model/conv1d/conv1d/ExpandDims_1/ReadVariableOp"
  op: "Identity"
  input: "model/conv1d/conv1d/ExpandDims_1/ReadVariableOp/resource"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/conv1d/conv1d/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/conv1d/conv1d/ExpandDims_1"
  op: "ExpandDims"
  input: "model/conv1d/conv1d/ExpandDims_1/ReadVariableOp"
  input: "model/conv1d/conv1d/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/conv1d/conv1d"
  op: "Conv2D"
  input: "model/conv1d/conv1d/ExpandDims"
  input: "model/conv1d/conv1d/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/conv1d/conv1d/Squeeze"
  op: "Squeeze"
  input: "model/conv1d/conv1d"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "model/conv1d/BiasAdd/ReadVariableOp/resource"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        tensor_content: "\210j\200\274{{\205=\204\\P?S\352F\275\232i,?\244<\034\277\277\325\n?\273\234\334\272\213\n\320\275\215\372\036\277\031\023\302\274\316j\037\274q\0220\277v\345\022?\335\264\305\275b\337\232\276"
      }
    }
  }
}
node {
  name: "model/conv1d/BiasAdd/ReadVariableOp"
  op: "Identity"
  input: "model/conv1d/BiasAdd/ReadVariableOp/resource"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/conv1d/BiasAdd"
  op: "BiasAdd"
  input: "model/conv1d/conv1d/Squeeze"
  input: "model/conv1d/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "model/activation/Relu"
  op: "Relu"
  input: "model/conv1d/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/conv1d_1/conv1d/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/conv1d_1/conv1d/ExpandDims"
  op: "ExpandDims"
  input: "model/activation/Relu"
  input: "model/conv1d_1/conv1d/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/conv1d_1/conv1d/ExpandDims_1/ReadVariableOp/resource"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
        tensor_content: "rr\326\206\204\363p\007\350i?\206\301\241\202\210\t|\240\010\3753\256\010\272s\267\006\242]n\010T\373-\210_Mr\210i\360\204\007\022\010G\010\301\262\352\007\313\372h\010>\032\027\0079\310\016\010\020\226!\01037\265\207\200w\304\005<i\315\205\262\353i\207\256\354\210\207\353\374L\210\343\354\251\010\026x\271\007A_n\210\234\232\261\210\3344\216\207g\004\230\0101\207\013\010\225\371;\210\374\335M\007\367/\021=\374\232\300=\261\333\017\276\031\n\247>\350\307\222>\367u\356\276w  >g\366\272=L\351\235>>D\242\207\032\240\373>H\240k\274X\306\221\276j2|>\341\362\017\210\307\345\030=\337:\t\210\225e\226>\233\221\301=\230\023e\010\002+t>R\267\337>\365\243\227>\215\265\261=2\003\020>J\311\025\210\255\271\033\261\024#F\275\'\310\202>\272\361\247\276\200\322\333=\253\322\332=[\277\260>\245\352h\276p\032\312=\31781\277\n\372\252;\273}\000>NY<\276\222L\226>2oO\275\177\323\n\210b\021\230\275\314e9\275\264\034\320\275t\372\266<\221\337i\210\342E\256=Uz\017\210\207\207\237=\244l\323=\201\344\013\210\370\213{>\020g\203>\235\276\246\276\274N-\276\307\373q>\036\177\263\207\032\233K\276D\254N<M\332\254\276\255\264\241\276S\222+>8\352\312>\035\276\340>\014\356V\276\26411>\323\023\215\277%\253\213\275\213\034r=\371\\\022\277\021:\013?\333\371;>N*\277\207x\016\354=\371\205\034\276l\362\205\276\324\331\253<?\260\203\210\371\237\037>\222\376\010\210:\\\361>u\237\272\275?J\020\210\t\370\245>\266:\361>\264\003\335<\211\326\277=/U\232\275\252\274\263\207\277\353Q\276H\225\257=\302>U\276\274\034\035>;f\260>\037\342$?\003\2652>\324\210\226\275\"\236!\277\014\237>>\312{\271>Ff3\274\321\037W=\006\251\327<z\"\271\274\320\237\314\207z\232\022?\273>\304\276\216z\370\276\233\204\300>\330\344\t\210\tm\275\275\311:\010\210\324#{>b_A>\340_S\207\223\177\252>\234%\026?\271V\206\276\230]k\276\271\233|=\205\033\267\207\325\031=\274\342\321\206\274\206\000\217>8\373\223\276\352}\r>o\022z=\216D\255\0074\231\007\210\246\373\337\007\375a\351\207\034 &\210\213T\035\207\2779\324\007\306\230?\007\323\\\254\207\t\214\003\210k\263#\207\250\030G\207\016\232\243\206\021\377\223\006\375\3249\207\367p\256\207\367K\016\210:\336\035\210\334\273\337\207\215\263\013\210f\320\204\207\335],\006+\256\324\007\322\227\001\210\375X\315\207\373\305+\010\355$\343\206\276\260\331\006\330}\304\207*\373A\207\354\354\306\207\230\024\357\207\230\362d>\376\005U\276>\205\317\275\\\3057\210{\204Y>\274\007\004\277z\010\317;\301\260\022\276+\205!\276\252\364\035\210\303g\225=\231}y\276\231\216\t>\251\257n\276\014\366q\207TK\231>51X\010\323\223o\274\272\266\207\275\"\033\024\210.\243\336>\344\240\261\275XF\020\277\327\260\202\276\2079\263>\021\264\274\207\365\305\345\2753\212$>o\357/\275\343,\366\276g\365\201>\377\300\230>\366c\006\210r\267\t\010\2307\007\010\365!\337\007l\260\010\210\367&\007\010*+2\210w-*\010\001j\034\2102\362\031\210@\233\023\210V\034\n\010x\303\017\010*E4\010\227\247&\210U\023\314\007\252\003\366\007\343\314\017\010\203\364=\210\375\304\"\010\301\351\002\010\215\376\345\0071\262\032\210g\327\004\010{Y\010\210\377\251\017\010\307=\003\010\2773,\210\342 \025\010\3431\036\210\214;\022\010=y\330\207\330\271~\207$\365\273\007\306Q\306\007\202\372\033\210\026\321\231\206\023\202\000\010v\340\232\007\t\t\036\007\204qU\007\030\200,\210\2661\001\210~\013F\210Q\2206\006\200\206\365\206y\240\233\207\323K\223\007\256O\032\010\205b\300\007&\331\214\2060\266\373\207W\342\221\007\243\332\246\207\200\207\374\205P\274u\007\216AM\207\022\000\305\207;z\223\206\260>\265\207\260\034\324\207w\250\334\007z\224v\007\024\302\031\007\205\230T>\264h\262\275[\356\206\275\240\326\214>{\323I>\267\232\323\2760\224\001\276\232\n&\276\260j\t>f\032\260\207?\027\322>g\n+\276\001\334m\275z\212\360>B\301\014\210\217B`=_\000\266\007\236}\301\274\217\331M=\337\331\013\210\361\231\246>t\026\217>\307\027L\276\000K\206\276\352N\034=\300Y\370\207\003!\344\2764\234\014\275\377\010J>\200\222\320=\342\274`\275\025z\226\275O\002\n\210E^\302\007\214A\342\007\t\253\334\007\264\030\027\0100\377\035\210jp\342\207\343\3609\010\337U \210\017m \210\246\272\023\010\203X\020\010\337\347\'\210r7\367\007\024\301\251\007\305\332\r\210\342\034\242\207\262\243\r\210\036?\005\210\322W\002\010\204w\347\207D\006&\210\257\237\344\007Tg\375\007B\254\312\207\325\335\t\210Al\t\010:=\275\007[\316\333\007\305\220\313\007\267\223\316\007\223\2772\210\352\323\274\010\020@y\210\250Z\215\010P\231\\\210\220\267Y\210\022\270\214\010\200\217\325\005. \314\007r\342h\010@5\267\004\250\265$\210N@\363\007\254\355Q\210\370\375\344\007\374\3004\210\030\306{\207\300m\007\006\302$7\010\376\333\215\210\016\0365\210\004\205{\210\300\204/\210\320W\335\205\006\274\271\010\322{A\207\344\347F\210J\233\361\206\371c\213\010P\032\253\210\234\223\204\010\033\256-\010\0341\332\0079b\005\010T\005\364\207j\325\022\010q\306\237\207\217\n\001\210\026\246\261\007\241\233\311\207\370\365\255\205\253\215\263\207\243\274\366\207S\365\223\007\343\371\247\207R\342\324\207\010\031,\207m/\366\207TF\017\005\340^\006\210\\\374R\007\037\205\257\207\r\300\r\210\223\270,\010\264\206D\006\377\027\256\007}\227\205\207h\257\212\207\031\246\\\207\"\302\037\010oj\315\007\006\032\345\007D\312\277\005OO\257\007\014\367\327\006\371\370)\010.\234N\276\312\327\003\276C\300:\210|\232g\275\004.\237\276\0073\361=:;\216<;\004\251\276\320(\'\210\031\261\277=\300\004\t\276B\356\227\274\341#b\276\352\0008\007\375\277\005\277\331\025\006\210\360\n[\276\364\331\215>\021\020\376\007;\225J\276\266_\366=\020T\024>\317\257\262=PR/>\334T\231\207\007\216\376\272\223\301p>\350T\332\276w:?>\371e\223<\024\032\252=S\001t\007\266\013\356\207\257\010\364\207\265\003D\010\010\206F\210\000\231\306\004(sz\007\356\345E\207\306\332\332\007\232S\017\210\257\365\213\0079\315\263\207\307\023W\007\204=v\207\320\'\314\0067\\\323\207\010\027\252\207\351\017\023\210b{\372\207\255\343\t\210\262\016\227\007\332L\264\206\335\303\004\007\031\031\313\207\244\344\365\007\030\360\222\007\270=\344\207\037B\217\007\024\215\001\210\362\337\374\007aG\266\007R\021\213\007\323\235\206\007F\252\331\207\322\006\207\007t\003\324\007\204l\341\007*\244\222\007P\323\002\207\233L*\010\322\233\273\007\001\243\010\210n\311\204\007\001P\230\207\220{M\007\010\342\007\210\\WH\207:b\024\210Sc\013\210U\267\255\007R]\001\010\234M\014\210\331\250\263\006j\271\247\207\222\232G\207\267z\002\210W\026\006\210\301\274\245\006\227f\315\207\366g\212\207\204U\235\207\310\036\222\206\204\207\364\007\370\262w\007\"L\214\005t%k\007\264\\d\207\267\222\220\206\200\360\245\204\234\271\227\010\"\256\\\007\354\003k\210u\237\225\007\271\335#\010\347\200Q\010\325\241\036\010\002\374\325\207Z\302\260\207\221|\274\007\3017\010\007\363\266\001\210d\204J\010\034\251(\210\255\351\223\206y\370\215\210\337,\214\207\242\033\374\206\334\2110\010\224.\256\210\227\242S\210\200\346\210\010\026R%\010\257\\\036\007\357\216\242\010/\027a\206n6\343\207R8m>\206\251\372>r\006\234\276a\231\320<\005\006s=\212~s>\241\344+\276\224\241\223=\343\321\336\275]\230!\210\254\005\355>+\227\262\276\230\026\316\276\302\033*\277>\303\r\210\361z\340>\337:\t\210\376\205\346>\000I\233\275s\241;\010\230wR=\200-\275\275\334K\370\275\244\2443\277\037\223i\276UV\027\210%$\353\273+\370\377>\311t;\276\246\210\177\276\351\360\272>i\322!>\020\005\332\276o\006\202\275\006\214;=\2606[=n \215>N\006>\276\373\333\261>N\030F\277\355\375\272>\021\251\036\210\353\323s>\2311\264=\217\310\034\275U\376\304=\235\317\022\210X\222\342\276Uz\017\210\323\247\236=\277\344\236\276`W\353\207\250i$>\337\"$\277P>\243>1\244\301>i\016\t?xF\034\010E[\243\276\235\316\204<83\336=\3222a\277>\212k\276\253\313M>\311R\361\275@\246C>C\276Z?\373\014J\276^{\n?\002\367\225\276CY+?j\n%\275!\005+>C\200\013\210\272j\r?\345\367\301>5\007!=\006\234\210>\350T\022\210\363h4\277,\352\254\207\3423\036>Z\363m\276\005\2764\210\005\2329>\201\374?\276\013\252\223>\255\260\210>\027\323\021?\006M\013\210\215m}>>\327\235>\251x\301\274\372k6<\330\034g:\237\230\233\274\373\275\223\273\273K\302>}N5\276\270[~\276\211\254\r\276\037\311\315=,\003\270\276\302\005B?\324\340f\274U\"\004\210\330=\220>t\206\242\276X`\235\276\341\205=\275\2227\007\210+\344\000?\301\201\331\207n\223??\370\362\365\276\336\203\006\210\tb\242>\327e\220>%\330\027\277pk+\277Qc6\277\270\367\372\207y v\276\351\373\346>\312Q\211>@Q#?+\024\317>\276\t\027?\3051\230\207\274\016\032\210\350\223\220\204\ny\253\007FJ\306\007\274{\321\007\374\031\300\206&\003\010\010\2243\002\010X\234\n\210?\245\261\007\037\253\024\207\035r\367\007\370\300\334\007\204\321\020\210\353\220 \010+\223@\007\360\004\300\207n\363\354\007\324\362\373\207\211\030\207\007\246O\036\010\017\202\366\207\246\257\211\207\030]p\007\234\205\005\210\022\370T\007\234F\214\0070\243\247\207\304RM\207\241Q\034\210\310\244M\0077\3302<D\242\027?\270b6>S\206\214<\244tn=\257V\217\276\234\371\317\276%\3451<\020S\021\277\253\3740\210hv\200\276\tT\305<\342\235\244>\244J\223\276\241\267\021\210I\213}7\3001X\0103t#=\013s\017\277\3501\n\210\336K\261\276\365\021\205\275>Jy\276/\212\353\276\023K\326\275O\031\337\007=\002\270\273jrI\2765\2378>\275\271\353\207V\352\027\273\250 \236\276\016:&\210z\300\351\007l&\373\207pv\033\207K\340\032\010|\210\321\007\221s6\210\225\254\r\010\260\215\r\010\252\220\301\207E\261\007\210\267^\006\0108\004\002\210\016\232\350\207\235!A\210\016\362\274\207\371\323\016\010\373\2317\210\245\237\367\207$\372\n\210[\260\n\010\016\207\365\007\262A\032\010\0273\010\010\213_\014\010c\034\004\210{2\037\210\014\026\007\010e\2516\210\230\211\337\007`\274\033\010\3701\375\0079\364\271\007s\274\244\207.\361h\206\021o\342\207\256\007!\007\033Y\253\207\201\327x\206\0343-\007aX(\207\206\253\356\207\214\267X\207\342\027\350\207\231vU\007\350\350\217\006\342q\274\007n\307\256\207\005\0269\210\234\213\245\205\020\226\360\207c&\226\007\252\257\r\210\220C\032\207$\237\320\207\372\016p\007o\305V\207\260z\226\207\202\204\370\207\205\\\361\007\014\363\301\005\216\320e\007h\0055\207P\272\262\007\336<{\277\225\256\267>\314\235\306\276\341M\350\276\204\2621\275S\242#<\033la==p\264>\203\022\035=!\351\361\207\370E\350>\251\357\237\276\267\310\247\274\260\367\036\277 a\n\2105\010\313=~(\270\007\223\201\r?\217\003h\276\t\313\002\210\'\262\250\275\265Fc<\267\234J>\246k\273>j\301\314=\251\310\372\207h?p\276T\330\037?\347c\217\275\261\330\247=\003\010\336>\242\325\363>\331\001\313\007m\237\007\010M\251\353\207\000\242\335\007\225\240\313\207\202&\320\007u\205*\210/\240\346\007\244w?\210\024\352\t\210\016\365\370\207k\243\320\007\'\226\017\210\223d\336\207w/\023\210\177\006\307\207/V\350\207D\343\006\010\366\276\014\010\230\336\020\207\243C\010\010\260\335\306\207\260\270)\010\326\304\247\007\030\341\363\007\313\360\030\210^s\034\210\001\004(\210\307\240\373\007\013w\263\007\367d\013\010\027Z&\210\267(\253\210\014\300\244\2102\211\212\010\322_W\210\010\260\213\010B/\n\210\317B\246\210\006i\347\007!\\\\\210bd\010\010\230\314\255\007\366\024\303\010(\233\205\207\330\247\255\007\024n!\010\2103\210\010\347\216\202\207\231|)\210?e\356\007\236\320\030\010\232^e\207z\325\000\210`x\215\210@\217\224\2060\355\360\207\374\006{\210\\\376\027\210\r\244\217\010P\007\217\010\200\312\025\210.Y\213\210v\373\302\010\n\364\020\210{V\363\207\244\275\351\006\333E\304\207\221\201D\007U1\204\207.\3766\007`\263\t\210t\322\035\010\232>\016\210@)\253\007\212\036\370\206\232\310G\207 \216.\007\233\034.\210\300o\342\006\023\274\204\207\013\3608\010/#$\010Q|\n\210%S\352\007F\365\r\010\213\335\023\210j\237\020\010\365\204%\007\231\350\032\210$\026\265\206]&@\007\252Qi\007\2140*\007#\034\277\207\002\002\314\007\371|q\276\314<\304;\027\213\003\277VXj>0\312W\275!\361\263\276=\317\237>\317)\221=\022\321\226>\247\343\021\210\351\274\240\275F\332\233=-6)?\365j\006\277\302\354\003\010\265\212W>\324;\024\210\220\347\237=\030]\247\276\327\265\001\210$\320_>\3759\204\276W,T\210-\343\032\257\332\177\215\273@\010\363\207U\246\206\272\250X\361=\356\362\241\276Dk+\276\240\223\306=\3772\237>\276\327\360\007\027\243\320\206\035\036\215\007*-\000\010!\231\221\007\323G\311\207A\362\372\207$\241O\010q\275\010\206s@#\210\350\372<\207\263N\270\207\323\207f\007\210\337\267\007\213\005\013\210\341\305\375\007*\326\235\007\310\275\000\010\366\372J\207\373\320\023\210\220+\341\207\22525\007F\024\006\210hC\005\210y\004\362\207\000+\201\210\'\004\277\207\244\260\255\207\201o\315\007\267\306\036\010\221\346\017\010\342\230y\207n.\367\207\"\310\344\005\377\373\005\007\347\3509\010\020\260\343\207\261W1\210\037\332-\006:\271\275\207r/\313\007\206\326,\210\275]\"\010\213\007\026\010T\237\345\007Z\037\274\007b\205\022\210\360\344\360\007Sc\013\210\232\323\215\005Qv\332\207Y\341\014\210\37725\006\t\020\331\207i\373Q\207\024/\343\007Z\2467\010V\007\r\010\202}>\210~6\374\007\3320~\007\255@\n\010\222%\222\006\222/\021\210\033\332\352\206\210WE\010M\n\257\010\350Y\312\007k\302\014\010\034\211?\210\346a\000\007\351\321\213\010\364\326\230\210\373\310o\210\202!\"\210N\267X\007\002\375\303\007\0367f\010\364\014\342\007@\323\367\007\211!\245\207\347\240\005\010\345\263\263\207\336\202\241\210?\r(\010}\315\254\210\337\303\243\010\000\313\'\0106\362^\010vF\271\210\331\327\307\207\021\2279\007e\177\342\207\273-\022\010@\2614\010\035\334,\010\206k\356\276.\034\316=vZ\363<[\340\346>\236\306\265=Df\247>\232\0161=j!\370\275\371d\361\276\312\306\r\210\346\005\261\274n\r\321>\014\331\242>.\366\037>z\022\r\210:\326\017\276#\220(\210 \202\256=\003q\275\276}D\017\210\324E\302\276\236~\251=\350\251\216\275y\356\227\276\314\322D\276\202\216\274\207\210Fi>\222\303t\276\352\031\000?\347A\254\2745g\364\275\360\314\205\276\340/\r\277T\242_\276\230&\001>\032\327\007=\211QN=,\206>>uZ\325=\337\355\200\276CL\237\276\356q\034\210\252{\024\276i\200\024>8\\\t\276s\245\222>3\370\020\210\265\305\362\274>\373\020\210\026hZ\275\006\261|>@M\020\210{*C\276\257 S\2757\307\301=5\023\031=\275\342\352=\320\374\022\210\035\201\205\275\226\331\307\276\243I\202>\037#T\276H,\305>\204\200\224>\341B.\277\2152 >\320s\302=\325\001Y=J\211\262=\372\341\322==B\264>f+\027\277\221_\333\275\216\030$\210\333i\300\273&aj>#y\332>-!5>\267\271\t\210\360\322\'\276\270&\r\210 \230\364\2768\022\262>\237[\022\210\270\301\355\276n\314$\2762@\345<\010\357\333<\363\177\342=g\354\013\210\331\207\227\275\260\001!\277\261\200\356>#!^\276\034[\234>\275*\210>\016g5\276\214QM\276@\n\240>3W\224=u1\200>\330\310\243>5\2071>~\0038\276\017\230|=(\024\013\210\235\373C>nI\014?\016rG>\006\301\352>\231\264\017\210\260\233\311\275\255\003\001\210\'\2365>\355j:\277C\r\016\210\311H\246\276\3368M\275\355\257\222\276ne\232\2757\224 \276\202>\254\207u\347\240>(4d>\243\347\030?K2\213>\247\035N\277:W\224\276\250*\036\010\034\274\334\207\307=\224\207j*\215\207_\364\330\007A>\300\007\257\316\305\007\214\361{\207p\360p\007<\347\t\210\234\246\023\010\371\313\010\010P}\325\007V\375\336\007\220J\020\210a\337\032\007\346\010\n\210\'\316\223\007\257r\224\2072\340\n\210\265-\350\207W\311\347\207\204\243\300\007|Q\312\007(rD\005\036\302\353\006@\031B\207\356\n\372\007\334\216\252\007\322S\337\206\233U\214\207 @\316\007\226\314\201<p0\030\277yv\014;\360\372\200=$r\246\275\314g\313=\203\350i>rJq\276\r\363d\274\277\"\373\007\316\2308\276q\246k>\\\337\005?\305=\367>\364\327@\007~\327\245\275\306b\017\210>h$>J<\325\276\374\351s\007gI\007>\327\214\327<!\240\026\275(\024\367<\223\0218=\3473\027\210C\027\202\274\234\307\213\275`\373!>\226\001\226=\343\251Y\277\r\004\020\277+7\014\010\323\r\376\207\004\315\314\007\316)\007\210\367\361\036\210\243\355\332\007qI\020\010k\367\t\210\240\024O\210\321\231F\210\351y\r\010\206\021#\010\236r\374\007Q\006\357\007!\267\n\210\227\003\375\207\000\037 \210\001+\016\010\201h\014\010a\377\005\210\253\005\343\2076_\005\010V\234\354\207\324\236\342\007nH\022\010\253\262\336\007\301\010\013\010\252\343\373\207 \227\226\007\352b\343\207\022\303\302\207\2047\004\210:[\354\206\216\330\236\007Wm9\207]\241\350\007@\000\220\007u\'8\010\005v\256\207\206C\234\207\305`\032\010\303*\352\207\"\374\370\007\205\310\306\207\321f\301\007\215\302\003\207\354\351\252\007\\\377\023\210\366b\332\007\265o\330\007\350B\023\010\001\253\277\007\254\250Q\206A\320)\207Q\231\305\007c\021\316\207\244\344\233\207\250_\361\207\214\004\223\207l\345\236\207\210|{\207\0349\204\007\215\022\n\210\026J\243\007\313e\354\271LD~\276?\216\226\276\031\033\216\276 \272z\274.\034\205>6\236\214>\377\3242\276\252o\214\277A\272\025\210\262\313\001\277q\033\210>\220\244\253>c\205\022<\376\214\361\207:a\304\276*\340\024\210\354\331)\276\321\022\247>hI\022\210\345\200\304\276\330\214\016\277\nhy\276\212+\323\275\204\256\243\276\312\256\355\207u\255\355=\007\260\375\275\000\001\361>J_%\276\365zJ\276\233\345A\276l]\310\0070\311\010\210s\327\375\0072\214)\210J\032\352\207\331\0202\010?\177\353\207\340\t\340\007>\241\'\210\245\262\362\207\334\027\006\010\342i\004\010A\370X\010y!\017\010\346\027\370\207\314l\360\207\354\200\314\207\240\177\261\007\362\\\265\007\306\215\302\207\334*\252\007\037\001\006\210\274\014\330\007\330z\310\007\255P\361\207\266\202\037\010\277\212\326\007\t+\311\007\345\367\372\007\221\014\364\007H,\323\207j\204\006\010\356\354\227\206\226j\027\210\007\250\232\210\215\233\244\210\311\032k\010\306\005p\010\374\262:\210\273\356T\010\230\'Y\006\004\255\260\007\351 \276\010\361\311Y\010 \302k\210\375g\301\210T:\255\006\234\241\027\207\346\246\224\007\006\001^\210\r-(\010=\217\017\010W\327\236\207\264Z\031\007bJa\010\325\352\277\007\306\236R\010\336\337.\207@w\307\205\324\240\007\206\317o?\210\026\206h\210h\245\216\010\003\340\204\210\363Q\330\207\265\203\323\207\354\324/\007\364\216v\207\241\223\033\2106\000\027\210\364r\213\007\234i\343\007U\004\236\007\202\247\311\207\001\370\377\207\036\202\272\007+\347\027\010\005&f\006\346\275\016\210\350\272\254\207R?\003\210\246\315\250\007\276b\257\007\316\263\346\207@<\215\007~\372\305\207\313\375\306\007|\3476\007Di\221\006\350~\n\210V\231\246\207;\024\252\207\200\0063\007\376\331\340\007\n\321\215\207\241\277!\007\300\376\006<Z\016L\276\'6$>\231\317\253=YA\'\275\346\275\n\276\t\316\272\2743U\231=DRB\277\362\303\351\20713;\276\354\000#\2762\265\245\276b\247W\276\026\014\357\2076\010t?tP\n\0102a\325>-\002\204<P\035\307\207\336\213\230\276\013\224\274>X<\t\277\323y\341\275\037\275\033?\321\263\205\207\251\331\263\267c\014\004>\036\027s=|\234\204>J\267\363=\200\257\302\276{\206v\007\310\274\013\207\216\034\350\207j\362\326\007_\355\230\007\274r\312\006\304F\321\007\3257R\206\n\0204\210b\363\276\007\275\355\026\010\246\334\301\007\236\265\267\006\306\226\360\006\213 \303\207\222xk\207\254Q\020\210\330h)\010\322\373\010\207\205\327\232\210b\'\356\007\177\323\013\210\252\233G\210\316\362#\210\006\002\034\010OT\023\210\347z\322\007o-\323\207n\250\216\007\204)\031\0054u4\007\202+\214\207\267\235\375\007\030N\245\007\262\\\207\0073x \007q \374\007!\237\025\0077@\274\007t\235\202\207?(\001\210\377\355\317\2070\021\036\210\264~\301\007V\302\200\006\315x;\007\264\001\000\210yS\224\207!&\021\210\314?\362\007\010T\276\007\226L\301\207\337q\340\207\247Y\257\207h\320\322\207\345Z\024\010\355\324\277\0073\241\002\210K\007\253\0070\007&\210\201\020 \006\254\0104\005\245}\212\007\036\016\314\207"
      }
    }
  }
}
node {
  name: "model/conv1d_1/conv1d/ExpandDims_1/ReadVariableOp"
  op: "Identity"
  input: "model/conv1d_1/conv1d/ExpandDims_1/ReadVariableOp/resource"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/conv1d_1/conv1d/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/conv1d_1/conv1d/ExpandDims_1"
  op: "ExpandDims"
  input: "model/conv1d_1/conv1d/ExpandDims_1/ReadVariableOp"
  input: "model/conv1d_1/conv1d/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/conv1d_1/conv1d"
  op: "Conv2D"
  input: "model/conv1d_1/conv1d/ExpandDims"
  input: "model/conv1d_1/conv1d/ExpandDims_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "model/conv1d_1/conv1d/Squeeze"
  op: "Squeeze"
  input: "model/conv1d_1/conv1d"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "model/conv1d_1/BiasAdd/ReadVariableOp/resource"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        tensor_content: "\237i\343\277:\260J?]\341T\277:\241\251\277.\362\030\277\201\231\276\277\307*\200\276\235A\366\275\320\022\201\277F\254\225\274\377#\307\277\335\003\255\275<\3665\300a\020\002\300B\343\234\275-V\n\300\300\257\350\274\270\310\212\276\265\373\t\300\323e\232\275\342\266\262\276\'t\224\276\223\345\'\300G/\343\277\303\2328\277\225\335\232\2776\366G>^?\347\276\304\325\333\277\374\240\031\276\312p\266\276&v\215\276"
      }
    }
  }
}
node {
  name: "model/conv1d_1/BiasAdd/ReadVariableOp"
  op: "Identity"
  input: "model/conv1d_1/BiasAdd/ReadVariableOp/resource"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/conv1d_1/BiasAdd"
  op: "BiasAdd"
  input: "model/conv1d_1/conv1d/Squeeze"
  input: "model/conv1d_1/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "model/activation_1/Relu"
  op: "Relu"
  input: "model/conv1d_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/batch_normalization/batchnorm/ReadVariableOp/resource"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        tensor_content: "\234(\206H\372oII?MOID\250\202H\262\355\221I\354\275\217H\347\031\221I\243\352\245I\226\306\213G\362\025\306\003v\024)J\316d,I\300\352_I\304\306\227IO\227\306\003En\215H:\235\307\003\245\3727J\311E\201H\n\233\306\003\021\327+I\252p\221I \245^G\203\222@H\031\202\245I\035\005\306\003=\206\250A\302\007\333I$y\343I\341\016hH\254\016mI\270\316\347I"
      }
    }
  }
}
node {
  name: "model/batch_normalization/batchnorm/ReadVariableOp"
  op: "Identity"
  input: "model/batch_normalization/batchnorm/ReadVariableOp/resource"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/batch_normalization/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000475
      }
    }
  }
}
node {
  name: "model/batch_normalization/batchnorm/add"
  op: "AddV2"
  input: "model/batch_normalization/batchnorm/ReadVariableOp"
  input: "model/batch_normalization/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/batch_normalization/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "model/batch_normalization/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/batch_normalization/batchnorm/mul/ReadVariableOp/resource"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        tensor_content: "\215\2179?\t8\024?r\231\034?1\215~?\001\361\316>\266d\273>\221\306F?M*\204?Lp\'?iGd?\300@\035?\262\302\001?\216Y\022?\272\207\013?\254\373^?\234\350E?\324\005N?u\254\027?\255\r\031?\022\005\332>\233\000)?\330_Y?\023#W?\344\211.?6\364D?4\314Z>\330\230o>N\200,?\242\325\355>\240\243\213?\r\327*?\322b;?"
      }
    }
  }
}
node {
  name: "model/batch_normalization/batchnorm/mul/ReadVariableOp"
  op: "Identity"
  input: "model/batch_normalization/batchnorm/mul/ReadVariableOp/resource"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/batch_normalization/batchnorm/mul"
  op: "Mul"
  input: "model/batch_normalization/batchnorm/Rsqrt"
  input: "model/batch_normalization/batchnorm/mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/batch_normalization/batchnorm/mul_1"
  op: "Mul"
  input: "model/activation_1/Relu"
  input: "model/batch_normalization/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/batch_normalization/batchnorm/ReadVariableOp_2/resource"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        tensor_content: "\013\000\320=\\ \366\275\322X\036>\365\030\207>y7\245\275\320.\376;/\305\032>\215P\227>\246\361\353=\320\325u;\271\024\204\277U2\245<u\026`\276\366jD\277\031\231\033<o\367B>\217 \316;\010\310F\276\023\363\256=ap\022\274\241\355\341={\237\250>!#R>f\252\013>\r\r\017>\220\372\350;\025t\317\274?\316\341<\003b\230\276!\263\212>R\340\303=|\2359>"
      }
    }
  }
}
node {
  name: "model/batch_normalization/batchnorm/ReadVariableOp_2"
  op: "Identity"
  input: "model/batch_normalization/batchnorm/ReadVariableOp_2/resource"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/batch_normalization/batchnorm/ReadVariableOp_1/resource"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        tensor_content: "\244\013AC\203\305\255C\204[\213C\306{\007C\0355\007D\314\376-C\333\224\327C\362\320\317C\037\255\217Bx\232\307\003\276\313bD\3619\306C\304\244\312C\356\352\006D\311\333\306\003\007\000,CS\237\307\003j\206_DLD8C,\337\307\003\377\000\307C\212\304\365C\344\277dB\211,\351B\304\323\262C(\370\307\003\245\036\232<e\250\022D\261\352?D\235\355\376Bu\331\231C%\034\023D"
      }
    }
  }
}
node {
  name: "model/batch_normalization/batchnorm/ReadVariableOp_1"
  op: "Identity"
  input: "model/batch_normalization/batchnorm/ReadVariableOp_1/resource"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/batch_normalization/batchnorm/mul_2"
  op: "Mul"
  input: "model/batch_normalization/batchnorm/ReadVariableOp_1"
  input: "model/batch_normalization/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/batch_normalization/batchnorm/sub"
  op: "Sub"
  input: "model/batch_normalization/batchnorm/ReadVariableOp_2"
  input: "model/batch_normalization/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/batch_normalization/batchnorm/add_1"
  op: "AddV2"
  input: "model/batch_normalization/batchnorm/mul_1"
  input: "model/batch_normalization/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/max_pooling1d/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/max_pooling1d/ExpandDims"
  op: "ExpandDims"
  input: "model/batch_normalization/batchnorm/add_1"
  input: "model/max_pooling1d/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/max_pooling1d/MaxPool"
  op: "MaxPool"
  input: "model/max_pooling1d/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "model/max_pooling1d/Squeeze"
  op: "Squeeze"
  input: "model/max_pooling1d/MaxPool"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 2
      }
    }
  }
}
node {
  name: "model/dropout/Identity"
  op: "Identity"
  input: "model/max_pooling1d/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/flatten/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\340\000\000\000"
      }
    }
  }
}
node {
  name: "model/flatten/Reshape"
  op: "Reshape"
  input: "model/dropout/Identity"
  input: "model/flatten/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/concatenate/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/concatenate/concat"
  op: "ConcatV2"
  input: "model/flatten/Reshape"
  input: "input_2"
  input: "model/concatenate/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/dense/MatMul/ReadVariableOp/resource"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 226
          }
          dim {
            size: 16
          }
        }
        tensor_content: "w\312\315\275\343\3721>w-0>\220\264X\274\0025\033\276\036 \223\274\357=\244<\226\341\326\276\207\304\346\007\323\366\266<\302r$=n\327\032=T\270\202>\200\017\223\276\265!\277>}\273\336\275\356\037\250\275|\324z\276>\0378\2766\023\256\275\037O\020\276\251\245\224=(\005\234\275sw\031\276\332\301\303\007|\321\243\274E\256\315>D\310\266>\343\016\272=,N\216\275\314\306\277>>\305n=V\331\262\2767fQ>\255\254\236<\265\324\321>\014\274?\276\217\312\351<a\312\026\275\222\352\014<\355\252\027\210\30011>\204xW>\242\371\201>9\200\001<\317+\240=}\236\312>\206\342\222\275\265\251\031\275QM\013\275G\304\300\275\272`/\275PTi=\214..\274N\237P\275\343\226\366<\306\325\274\210!\224b\275\241\027d<\203\207\335;\206\273&>U\350w\275\363\014\020>\026H\000=Fh\272\275\217\333\t\276\020\2530\276\376\325R\275]g\325\275\357\030\360=p1o\275<!\007\276m\227\"\010{\347V\274\276\355*>\251\355\213>:\367I>\330o4\276E\271}>\212i\336<\274\215\204\277\370.A\2765\365\221\276\010\305\363=\210\366+>\336\212\t>q\027!\276\331\003<>_?\t\010\331*\215=\222J\365>\260\364\357>\211\267\217\276\331+\003\276\214\357\005=C\217\256\275\rTn\277\t\217)\276\303\231:\276\373\305\345=\357d\031>0\231\222=2\303\367<\261\273\346=\331H\002\210\361V$>\265\212\001?\277^\363>\215\366\205\274\277\272\324<f\265\022>8Uq;\274\031\247\2761\215p\276\203\374\003\277\222\354\343\276S\247k\275B\245\272\272L\000t>\227\r.\277\203\036\004\210\223\236`=\204\324\315>.y\021?\373\003-?\177\315\365\276\304\344T?\005\000i=\356\256\277<P\356W\276Yy\031\277\035\023\376\276t\230\334\274\274\305\220=w\2354=QZn\276\\t\240\210w\242\013\275Q\006{<fkW=\014\343p>\340\022*\276\020^u?\264\004\214\275.\003`<\324B\333<\361\324\026\275\345\226\033>p\260\320\274-\n\364;\264\270\347<\373\230/\275G{\212\210\353\327\301<Hs\352;2\205\027=\020vt\274\020\376\021<\370\323o9:\303\236\274\037f\225;`\244\340<\334Z\314\275\036d\311\275N\254\251\275\376\366\276=\321W\334\275\326\035z\275\002Y\031\210L&L=g\007\200=i(\273\274\323y\027\275\322\323\030\275O\274:=\227\014\320\275T\3231\277\302O\231\275C\243\257\276\245\220\033=\323lW>\300_,>\376\222E\274\003\371\016>\300\211\035\210\300u\276=\257I\263>%\013\314>\363#\325=\255\337-\276\306hK=\262\377\004<\243V\352\276\006Y\264\274p\347\317\275\261=\264\275\215T\262>E\017\302=\341o%\276\235\221\t=\020\261\361\007*xR>\177d\237>bH\222>l.\201\275)\275\003=\340\314\333\275\263\322W\274\016V\035\276-g\203\275*\003\016\276;f\202\276\n\205\275=\311W#\275\354\206\376\274\320zZ\275\n\372\342\007b\320\003\274\266\257i\274\004\376\222\2730\314W\276\334\315n\2756m\357\274\277\344\026\276\2039\207\273\377\372\006=Df\221=\022v\037\275j6\246\274w\371\216;l\225\\\274\324e\216<\"\245\005\210iA\'\275C.\035=\201\202,;\316\2160=C\350\t:g\210\267<\'\030Q\275\373H^\276g\334\373\276\323\262\201\277\014\023\261\276\234\034\363=\245\0224\271\304\264\277=+\0345\276.\200\347\207\253g\017<\006n\315>\364\350\366>\310\253R?\224Dr\276\335\274^?\274\234j<\000\336\265\274\363\314\353\274\330\260v\274)\267!\275\205P\202\274#\243:\274_\214=\273\330\037\314<\264\244\201\210\005\242L\274\324~/<\301\006\200</;\017\275F\353\2519\300\225\265<x\353\314<\356\216\274\275_\234&\275\010\362|\276\306/.\276\340\232L\276\013\252*>{x<\275\314\351{\275\223\022\013\010\2030\223>\256\'\250>\332`\212>\265\035\022=\231\331#\276\"\341\204=\206\375|=\353&s\277\346 \320\275S\360\r\2769\326F>\3602\202>%\321\273<[\301\037\276\\?\271>\334\n\302\007\374\307\265<\240\323=>\226|i>\372\227\351\276?\356\241=\274\263\234;\304\026\305\275\256\350r<<:^\273reo=\2311\365\274\220\202\353\274z\335a<\223\350/\275\245c\356\274\343\354\r\2103\371\252<W\246,\274c\375\275\274\264=\274\273\200#\330<\027@\234\274\333\023a<\253\311\210\276\004x\310=\212\261\264\275ip\n\275@c\210\274\010\350v=\017\227\027\275\343\021\365\276Ix\035\210\267S\364=*\364\215>\370\276\202>\275\362\031?\302|\201\276\030`(?+\357N=I}\242\276\375r\241\276L\242\n\277i\245\315\276C*\370<\035o\305<!\262\000>\332\362\327\276>\335\357\205\n\354;\274f\225\244>\3507\206>r|9?\341\352\334\276nA^?\217&\007>@q\233=,\265A>\303\350-\276\217\316\245>9\356\307\276\033\270\374=^\222\220\275\026\325\365\276T\261\004\210.\314\246\275\326\375\366=\023p\241>\030!Y\276,\247\231=Ed\250>\327\345n\275M\367<\275H\273\223;\226u\202:\034\303_>\266s\201\276\301V,=\347d\006\276\356&\006\276\220\366\265\207\'\271\017\2769\320\253>\2607&>-X\331\275$\331\273;D\031\220>\0333l<\006E\002\276\302\010\256;\350)j<\224\013\204>\320\332\214\276\241\242\320=\347\202\217\276\374J \276\306(#\010\265\241\300=\314j\361>w\220\242>\274\340g\275\035\3120>:T\306>\361\352\316:E\031\016\274\270\230\346;\200\016y\274\333\370\257<^Lo;\207&5;\202V\217<\205N\332\272l\233\237\007k*U<\010\3168<\0161\232<\3665\007=V\2061\2759\023\201<x5\016=\336\237\352\276\035P\031\277\203\021\026\277\327\313\003\276\236\030\023>\305HB>=\344\216=\247\260\346\275\304\343\027\010D\337g\275\237\276\277>\226\212\263>\270\222\202>\212\301H\276.\247B>\274\306\275\273@\223\247\276 \007}\276yOW\276\016B\n\275\254\323\357\275\212J\216=PuP\2766\034O\276\365(\036\210\266\016\267<\311\220\003?QC\024?:\262\251>\033\232j\276~m\002?\344\236\352=\327 \203\276\\\352\256=5\212\020\276[\3525\276(%\204>\271^\257=o\262\316\275\265\350J\275L\035\023\010\024\310k=\241\226\342=\313\275J>\201\326\206=\334\353\211\275tn?:\255\221\372<q\242\300\276H\033\320\276k\333M\277\007;\t\277@\237\037\275\033\312\250=\320^7>\263\244\021\277;Z\263\207J\315\017=\254\241\231>SO\272>5\361E?hl\247\276\275\212\204?\013\244\274=H\333\214\276\021\211\220\276\026;\024\277\000\t\267\276\316\3261<\207K\213\274\026\332\311=\356\206\221\276\370\021\331\007\327\004\266\275\002K9>\3260~>\314\257\004?\225\327\223\276\207^\364>\n\357C=\316\304\311\276\303\327H\2765\001\023\277\227\"o\2767\313\277\275\266f\323=}\253\222=\277c\037\277\350\344$\210T5\312\275CS}>\'}\226>p\226\023?\2665\340\276\226pP?&\230G<U\'c\277\"\203K\276o\001\032\276)\016\241\275\234\357`>\336\337\007>\346a9\276\240\313/\275T\r\346\207e\3609>oy\307>\002\332\360>NR\244\276\217\017\257\276E\300v\276F\377\020\276[\342\201\276\212\215\203\275\016\004\030\276s\354\030=,\036=>\365\373\201=\036\222\210\276\177\347\">\321\334\017\210*6=>\237\375\212?kHr>3R\270=\031lZ\276e\357\365\275Gf\024\276\254\306\235\2765\"*\276\010Mg\276\257\314I\275%\014\353>\232\304)>q\023o\275r\030\306=\3648\026\010\231\372\037\2751\304g?\366\010\'><\2475=\"\371\005\277TJM\276.\224/\274\375\203\317\276ckY\276\224\235\005\276\217`\207\276zJ8\276\337]=={\230\311=\302\363B\277y\231\265\207m8\246=:C\261>M\353\022?d9\304>d\034\020\277\233\257\335>\215y\213=\263\243\261\276\263\033j\276fa\230\276\316\037/\276\230\246\331=\2534\261=\026\266\230\275\033\030\203<y\235\010\210\260j\237\275Z=}?k\253C>g)\320\274$\354|\276\367_\311<]\365j\275f`\n?\373\253\316\275+>k;W\036\'>w\3337\276\233N3=r\331M>v\343\333<\240\010\017\210G\227\002\276\243:\257=\246\245B?d\253u\276F\214`\277\356\253\351=\345\225r:\342\343\327=\276\020\013\276\334c\204\274\033\250>>\372V\310=k\236\232\274?\324\205=w\363\204>xI\n\010\264+\037>\\XU>\245V\333>V\236N\276\177\244\202\277\302u<;(\331L\275EPs\277n\300v\27511\244<y\210\n>\312\202:>\304\034\265=Y\253\207\275\373d\003>\002\036\010\210\026e\240=vG\224>\325\262\027=\300.\035\276KH\235<zD\341\275\242V\222\275\025Z\n\277O\306}\276P\224\276\276\261\007\224\276]&\217\275\302\366g=\320\000@=\257\300\301\276i\355\207\207EZ\250;9I\240=2\333\261>rC\346>\270^4\277\320\211\007\275\310t\227<|C\200\274\021h\377\274C\rP\275\031\007\323\274}Zf<\241\021\3048Rnh\2748\301X\274N\203P\010#\037\023=w\367\340;\343\262\230\274\334?\220\274\213\351\304\273\231\016\236;\227\200\272<O\254\324\275\223\215v;\250\3661\276\013\370\356\275(\001\007\276\204\336\206=\372PX\274\330\271\020=\347\2652\210v\253\243<\tM\006>T\377\023>\236\212\025\276@\276\266\275F\263\356\275>\310\360=\262\001\021>T?7\276p8\366<I\000\024>K/\365\275f\017\366<^\344\226=\221;\357=\237\017\001\010\300\274\211=\325\334\203>\312^U?\035\316\337\276\315\311=\277\241,\256\275.b\340\274\335:\225>\203!A\276\272\323)>z\340\312=\217ft\275v\036\217\274K\257\264=S\323H>UN&\210\300a\237\276\026\344\366=\265@:?\230\273\361\276K\322\367\276l\322\206\276\352\347S\275f\250\016>-\365\320\276\313!\204\274\373U\321<\370\261\005\276\264D\273=\261|\004\275v>\311\273NE-\210\325\353\201\27639\227\275[\305\271>r\210q\276\006\034\377\275\334v\032\275\347u\323\275F\212F=\332\003D=a\223\273=t\006\255\275M\302\266<\324\252\360\274\231\214)=\275\036\327=7x\351\207\323\325\023\275d@\210\274\247\200\220\274\264D\007=\244\356\001\274\267\232f\275\354p\013\275?\274\244\276\205Z`;\265(\332\275y\261\264\274\362\353#\276\237\031+=\275F\317=\377\215\033\276\013\326&\010\374\203\037=\260\002\022>#\345/>\025P\267\274`\355y<\346\3567\275yl\374<>\000\004;)-\033<]\3127=\250;\304<\243H\231<\003\206\014;\362\316\303\274\307\2021=\320\335b\007\202F0=\352s6\273\211\3364<\"\035\346;.@\325;a\217\025\274Kt\243;A\320u\276\246H%\276\342E\202\276\230\016d\276\226/!=\317\303\270=I\346\237<\377\231$\274\267\020#\010\034\013%>D\376\n?\324\316\304>\2270\020\276$\331\030\276\241\177\310\274\250\007<>\0167\230>\237\317\002\275\022\0008\273\221\242\033>M\351U\276\006\345\230\275\376\027\242=Nd\224\275\230l\354\007\276$\360<\346\313\253=\373\347\276>\331s4\276\324si\277\027\021\251=J\274\232\275\323\025!\274\243\351\323\2752\177>\275\304\037|\275|\234o\274^O\227<H8W\275\331\315&<\226\262\322\207\230\2442\275\303\227\354;\30379\274T\207\000\275\213\204\302<\010\375\003\275Uu\227<\024 V\277Z\231\351\275Vwb\276,\3604<Pq\227=T\266C>]%\242;\270g\343;k\271\n\010W\217\262<\0206\005?\304\375\362>\032\274\377\275\234U\253\276\371^\004\276\343\024\024\275\335\324Y\277\210\256\232\276\345\343h\276[\033\262\2758\261\301=\243G\263=2\361l=\372\035T\274a_\346\207x\244U=#\370\316>9s\026?\306\352\004>9X\215\276\177W\316\275\032\254\266\275|\334:\276Q3I\275\316&\024\275\005\322\215>\222C\217>9\004\370=X\331\000\276\321\220y>\317{\"\010\243,\272<}$\027?=\340P\27680A>\310\035\316\276}\215G\276\340\367,\276\202\340\342\275\226b8\275\333a\026\276\261\347\230>m\n\315>xN\317=\036\020x\276\261\337\301>\032\014 \210\207-!<\243\'[?\307\212\226\275R@\r>\036\021\302\276\007EU\275\2069\221\273\341\027t\276\355q\231\275,\274j\276BpQ=\364M}>\256h\366=\036r\376\273}\230\237=^\306&\010\324\237\261<\177]??j\3117>\221\365\202=v\3333\277\243 \r\276e\3567\276D/\366;\262\313\232=,\0241:\016\245\263=K\231\002<\210\2067:A\2151=\253\275\216\274\360\261+\207\3739$\275\375s\345\273\204\0016=\364tW=c\260\201\274jv\027\274c\221\242<T\332q\275\354_\366\274\001\303\251<\n\246j\275\357\350\"\273H\301[\273\006\311L\275rU\216<rg\207\207D2\n\2759Qn<9L\205\274Y\314\2038\206u\230\275\306J\246=\250>\300\274\276\030\005\277i\374\320=\352d\345\275\027\327\355=F3u>\227\320\250=V\340\213\275\211\222\217>\213\263\375\007s\323\360= f{?\222\203\342>{-D<v\242\277\276B\377\244\276\020\347\212\274u\226\237>\244c\217\276\316\346r>\010\"3>\351\034P\2761)\027=\325\340\224\275\267\253\025\275X\212\376\007\020\004\360\275\372b5>\027\244L?\335\341\227\276\r\005\363\276\267+\007=\255ME<t\3653\277\227\347\371\274n\034\231\275\240!.>\021\312W>\324H\320=^(\265<\337\3623\275\232\357\362\207n\372\003>\014\036a>\300\254\225>\271\212\276=,#\363\275\030\025%=\243|\212=\200$\022\277\245\237\305\275<\307R\276\216\250\375>rr1\276A\274\263;\306 5\277PV\227=\177\240\361\207,<&>\360\2134?\235\237\217>\251~1\276\036\306\320=\234\374\310>\247\204z\276\335\332e\277\304\255\263\275\224\377\216\276\272\022\235>\231\213j=?\341\013>\371\224r\276\257\243g>\013\030 \010\214\357\024\2766\026A?B\024\222>1\347\225;Hj.\276=\331\013>?S\010\275\0036\273?)\022L\277\334ak:Y\256!\276\010\3462\276\233\270\254\274\206\t\260>\205mW>\322\376\027\210\267\017%\276o\333\026\276y\262\242=P\346#\277\313L\'\276\353\036\017?\244\035\031\276\332\256t>G}X\274 \016\322>\222\237\237>jq\211>\026\372^>\240\235\003=\233\r\213=\372W\007\210\277\356\223\275\321\010{\276\025\r\"\276\232\273\243\275\350\365v=\230\317\017>\214G\321=\004\267\353=[\316\231=fQ\031>\206\214\014>\302\340>=\234\345\267\274-\370j\275\265Go<\243\217\351\007R\032\207\275p%\301\275\'2\227=MS\231=R\020\303=O}\006>\270\213\375\275\263\033`\275\367\352\014\277t|\026\277\342\376\023\277\364\336\367>\027\244\">L\274\200\275\355f,>c_\366\007q\240\331\273\251\013)\276\224C\013\276\323\r\334\276\300z\">\331? =!=c=$\017+>\013?^>*\014}>\267\337\206>\027$z>\257\275\362=\257\223\250\275\324\335\332=\310\350\024\210\346_\310\275a\314\266\275k\032\024=\007\010\037>26\000=X\n\306>h\204w\276?#\013>\330\200\270<f\360R>@\016\220>\360E\201>\376\345D>\210\264Z\275\271\274\304=\256:\324\207f+\002>\001F\005<\213\217\365\276J\257G> \272\205>_\275\201>u\000\223\275\205A\203=\367\262W=\356xG>\177hJ>C\245->\376\307\226=\t-E=\033P\022=\245\310\031\010\247\377\362\275\332\233\243\275Y\347\231\273\370\264\215=\021N\267=\372\344\346=\252\323\031\274\002v\017?o\260`\277\204\361\246\276\347Px>\331\305e=\353\211Y=@\033\336\276\377\005>?\364\367-\010\322\003@>l\234\211>\316\"\263=\271\370*\277\021\344\220\276\375J\314>g\re\276\342\221,=\357\306N>FH\371\275\214\304\225=\303!\007\277*\2069\276P(\344<5\007\365=\273\274\307\207\231es>u\362J\274M\307\217>o\226\243=g\261]\277_j&\273\251\275\315\274\365\225\267< \303\314\273\303\264D\275g1#=\255\227\240<o!\270<\204\253\251;{B\362\274\245\325%\210\177\3049\274+NS\274 \177Q\271\000#\300;=\350\371\273\222\212\226\27474\373;_\234\334>\265\201$?O\231\364>\245:N?\023\276\221>\272\330\272=\264\361\353\275e\3735?\315\304\006\210Iw_\276\262F\017\276\247h\362>\374\n\231>\316\335\301\275F^\343>\211\212\353\276l4\027>\267\001\016<\201\220\222>b\230\221>X\326O>$\324\375\275M\234m\275\302M\326=U\035\013\010S\367\270<\242\007\026\276\366\244\303<2\300\304=n\002\357<\247\024c>Rm\312\271\216o\231>\377\177W>p>\334>S\013\324>\351\275>>\334\030!>\372?\237=\203\245E>\252\322\350\207\004\'\226\276\033\024\205\275b\340\331\275\037\306\231>\244\272*>\344\242\246>&\357V\275\246]\016?\17744=!\276:??\267\032?\332\334\275>.$\227=\003\323\276\275\333=a>\212\277\356\207\013\310\002=_<\007\277\256]P>]\343z=\334\302C>I\215M>\302\365\205\276\246\213f<\326K\370\2738g\233\275\313gO=\016}\332<\236\336h:\273\307\277\274<s!\275\205\\\024\210\201\242+\275\211\251\241\273\322a\202\273h\202#<\374M4\275\330\262\236=\026\214\327\274\'\220\234>\257\002\363\276\343\233\304\2773\277o\276U@\023\275_v\337=\274\325\265\276cb\370>\342 \362\207\206\241\222=\220\247\033\277\245\031}\276\355b\250\276\222\017\207\276=\242\032?\236\202\202;\341\343#:\ta\220\2744\330\'=\310\231\270\275\341G\222<]\263[\273\030<5<{\037\267<\'\366L\010\027v\356;R.p\274I\374\241:\265\230\270\271\301\n\370<H\301\326\274\\\0204:\013\255\034?\2735\313>\375}Z>>\241\364>T\2529>f\330W=\356\034\202\276\026\307!?9A\006\210Y\260\245\276C\235\000>\205\325\202>\302D >\"\303\013>\335F\266>\341(7\277\363y\270=\337\005k>y\372.>y\307\004>Q</>\037?\242=b>\224=\360\337\304=\'(\000\210\221\353\032\275t\366#>D.\272\275zfi>y\350\227=\216\222\034>\007q\021>\220+\364;n\3428<\261\351\213<\215\006\251<\347\205\177;\212hh<{\367]\274\303i\345\274\023$!\210t\0160\275\252\rG\275\325!\251<\005\363\245</I\261<\305\266]\272\311\3547\275\241\322\354>\037\262d>6v\246\275ca\363\274\017\253\205\276j\001\354\275\361\345\316\2752Q)\275\217\020\030\210\3368M=\313\211>\276\355T\364>\025~\367\276\366\367K\277\346\312&>}\214s\275\306\266B?ys\243\277\212D\254\2766\031\276\275\022 *>\321\255\203<(\330\014\277\327&\020?\236C\013\210\315?\r>\341\304\260=\326\207\207=\035\007\210\277E\357\327=J\266\375>\035\221Y\276\244\341\316<\236\267\217;v\206(>\365\240\352=\363\201%>\253\017\237\274\227\372\376<\364\032l\275\274\032\013\010\311\213\317\275\260\234\026\276\272\213\344\274\332\212\026\275$\005\246\274\307&X=:\252\031>\2203\326=\366~\255=\325\277\324=\261\020\314=\2426\021>\021c\272\271\273\204f=\211\324\365=\010\223\312\207\207\010@\275n\223C=\317\337B=\200Y1=?i\254=T%\006>\334\300\242\275\305\006\243;\350\364L=\363\270 >`\227.>\325\277)>#I\262<\223\272d<%\364\314=\'n\031\010K?r\275\376=\315<]Q2\275\372\353@=K\024\244<\'e\351<\352\372\"\276\006\235\301\274vV\007\275%E\n=\341\246\202\275\275\2042\274\211\017\370\273\336F\006=+\003\276<LX\377\006\261\206\224\273\'\242\324\273\007\233\333\274\030\235U=%\334\t<\036\033\210<y\"\323<\013\200f>\r~$\275Vw\234=<\025\354=\022\'Q=VZ\247= O\353\275\3021\207\276\014\006\353\207\023\277\023\276 .\266<\261\n\306\273We\t\276\024\221g\274\036\316\250>\2268\237\275\257\310\373>m\201\203>r\030\026>\201\026\202>\351\263F>(\345;=#\270\210\276\035\342\276>K\273\363\207\275\002\247\275\325\340`>\373\034\224>\365\3462>\373!T>_\275\377>R\366\377\276\221GZ>\'\010\027>Q!\207>\014\017\320>\332\264b>4\251\323=e\331n\276Rk\232>\272\373\273\207\336\025\244\275\003m\227\276\274\253\001\276\361g\223>\273t\213>!\261\220>\007\000\275\275\205E\006?m\241\324\276\305\301\237\276\255?\035?\307\200M\276n\342\000>8\306\213\277%\264\035?\327\377\037\010\301\371\033>\370YT>\234\355j\276Zr\310\276\016W]\276\2352\351>\272\242z\275\026\007P\275%\3464>\312A\213=\363\360$>\343k\'>5\301@\275\033\033\266>K8S\275v\253A\210\330\344\307;\321\016\210=\344\326\360>2\207M>\270\017G\277\327\017\253=w\367\330=\301\335|\275\360\353\202\273\353\312<=\031w#>MX\245<B\016\226\273\360\351\004\275\002\303\177=\033\205#\010\341\313\323<_\346f>\307p\345>\225\336\340<\2172[\277D\336c=\212*<\275\030\302T=\200o9>\331@\034>\017\364]>+\272\273=\331\215\334=\202\\0\274_\351<>\326\266\n\210\216\0253\276C\306a\276y\242\004=I0^>\375D\310=U6\240<\276\371\204\274(\373\257>b`}>\325\260d>>\306?>J\244\323=h*\236<A\037\232\275\020\010D><\000\005\010\372+\022=\345\212\355<=\341\224=\204\346\343=\r\271j<8\026\267>\235\374\376\276>\263\213\276\311\336\205>\034M\210>$yO>\022D$>\300f\013=\001v\301>\370\221!>\000A\033\010\250\325\330\275\263\024\243\274\225W\226\275\025:\250>T\333D\276\003\300\354\276 \225\307=\325p\331\2767\036\003\277j\313V\277\274\250\027?\274!\005\277\334a\";\251\213/\277\225\023\247?\000B\255\207\225J\276=\022\336\262\276e\303R>\004eN\277\021W\340\276\216\364\326=\333h\003\275\263J\235>\224P\254\276&\261\001?4\000\245>\244\033[>D\272\276=\021\001\320=\343I\277=\003\344\363\207\307\351\340\275ut\031\275\227|\026\276z\205S=\036k\316\275*\351\025\276\201`\320>\211\315S=4\207\276=\243W\035>K@\n>\336\'\216\275\256%\210\275\321\356\273=93\272\275]\373\007\010\035\325\024>\360#4\276\027\t\223>M\337_>\032/\325\276\235c]=\256\321\222\275P-\265\276D\274J\277\266\326\207\275\300\254\255\276\236\221e\2762\223\336<\242\320\023?\250\353\375\276\246\247\023\210\216\327\351<\020]b\276\222aI\277\024(m>c:n\277\263\2700\277(v\267>G\0337=\252\260G<J\"\341=\250`\006>\317\346\316=\271\260\234=<\177[\275x\324\267=,(\025\010\251\220\312\276\224\313\344<\037\227\307\274\277\367A<\240\303\003=\236T\273<GR\255\275\017U\307\276\375]\211\277\200\364\024?\257\231/?c\232G\276\250\312*=\331\300\010\277{|\242\275\200\020\351\207\346?\267=\252?/\276?\336^\276\203\214N>\006\344\321\275\024yU\276\034u\250\276\rr\r\274\213\034\247\273\211\332\322\273\035\347\014<tC\347<\262\236\177;\344\n\223;\206\364\016=&\207\243\007\374(o\273\016\246\204\274\200\207\317\274\223\200\237<\206 \024<\334\365\270\273\322\356_\274v\333\026>[\321\254>\204vv?u@\242?\260\227h<\'\364\354=~:;\276B#\347>prX\010\246o\361=\007\234\032\276\020\371\017>f\034 ?\313\215\003\276\224\205\035>E\027I\276M\205T\276d>\377>\033k\222>\245\365\253>\353\363\361=\2258\010>\037\256\315>\243_$>d8\347\207\357p\364;l\220s>Xs\247\2766\244\004?\033\275\305\275\360nk\276\0347\314>\003\\\257>\004\251\301>\331m\301>,i\242>\305\002\263>2\327\003>zR^\276p\026~>9Z\305\207\234\372\"=j\305\246>\253\227*\277|\215\247>\r\303\264>*\3337>p\253\257\276|\\h\275\331\363=?7\343\306>\342\033,?\311\337\021=\326q\305=m\337\225>O\225\r?\326W\002\210\2259\275=\005\342M>S\353\200\276\304\030>?=\305\036\276\250Z\256\275^\341\225=\310A\322<\363\343K=d\250\221\275V>o=3\235\244\274\207O\373\273\275\347U<\266j\206\275A\025\024\207\313\371\204\275`\356\261\274\246\204\303\273\336Jp\274z\0025\275\003\347{=B\240\207\274kb\017=Y\374\212=\350`\261=\345\022\307=\035b\262=\323_\"=\244\213-=\324\242\232=\300\347\337\207)\372\020\276\022>\014\275\233\002Q<P\360\244=\265\022\227<5\212 >\371\270H=\2706T\275c\001\241\271l\272\306\274\036b\312<\305\014\036;V\232\n;\240\342\351\274\001]\301\274\"\177\260\2074^\344<[\221\314<\301\271\311\273|\240$<UM\352\274\364\306&=W\230\272<%\364\031>\37102=\004\002:>4\204O>\316\233@>_2\021>\214\271n=[Lt=\002n\030\010\\\302\216\276\021%\230<Ni\310=\227\261\327=g\343\376<^\376\300=\247\304\205\275\002\'\260=\005\363\372\276\326\300]\276\350{\213\277\324\201\351\275\377^\240=R0=\277\364Y\202\277\374s\307\007\345i\251=\327\270\263\275\317\003\343\275\023\001\223=\"\260\n\277\323\220M>qQ\301\275\247\323\323;\310\312\021\274FF\364\274\254KG=\221uA<\"\210\267<\355\364\334;@\270\204\275\324\271k\010U\372_\274`|\276;\003w>\273\224\353$\275\024$g=\375c\353\275\374\372%;\375\352E>\272j\356<*\241\206>t\373M>\034qk>\212\235\231\274\245a%\275m*$=\022,%\210\336\342|\276\334\311\006\276\375\216#\275\266\0176>@!\204=\34645>\321\307b=\300\224F=\234\210:\273-\245.>\362\370e>}0\211=3\377\021\274\230J\337<o(c=B\345\376\207B\247\000\276\222,\212\2737\306\177=\237\360\253=}O\334<65\327=\026\363]\276\246-\306>O\354\376\276*a%?\372\003_\277\216$\227\275\037\032\226;S\250g=\321BI\277\274\350\207\206b=\322=\340\246\211=\221\353\313\276\361K5?r\377\211\275H\002\240\276\240z8>\231q\270\276\215\311\202\277\263;\200>\357;\301\276\217K\014\277-\'\226=q\365\322\276K\254&\2776\255\036\210n9\200\276\352N)=\n\262\230\276\025(\331>\241\034}\277\035\301\312\276\301\203\036?\207\356\201\275y7\354\275\2647\030>[h\036\276\037C-\276r\024w=\356%\022?Y\233\320\274\031\350\004\010\2167.\275\300\031\014\275U\036C\277\354\001\200=\255\320\203\277\234\257\204\277\020\t\322>\312T\223<0\'];\2767b\274N\323\024\275\323\0210<\001\346\023\274!\365\022=T\247\213\274\364\224C\010\315+\257\274W{\236\275\005D\221\274a\241+=\317\237~\274Q\272\371<\32538=\230\204\220\2755\r5>\272U\316\275\025\0304\275\223W\217<\r\006\245<\305\350~>\372+;>\205\334\"\210 i\326\2753#\247=\217\3626>OM\177=f:\363\273\263\342\263\274a\275U>\253h\272=\026\037\263=\276\337\037>KK%>;\2743=\001\341\331<\200H\311\272\356,\177=z\204\212\2074X\036\271t}\235=c\320\035>\225\210\">\364\301\027=\303Mg>\317E\020\276\266\306(>\366\351/>\214#u>\266\265\373>H0<\274\030Bx=R\251\370\275P\212\322>\347e\302\207D\224\227>\327\254\020>\340T@=\224\315\315>\352\223\024\274\317\313\363=\026\362=\276\221\221\243<\035f\307<\030\362g=oQ\030=\225$\320=\337G\r\275kMy=\310F\206<l\n\033\210\365\255c\276\236?\364<\260\036\035=z\014E\274\031\376\313\273\271G\364<\264\254\245\274\205\322\304=p\t\257=\224\220\007>\025\307\364=\027S*>F\020\336;\177\257\210\275~\004\252=\0355\034\210\261\266\204\276s?a\275*m\017\2756\036\212= \346\033\273d\256+>\266\306\337\275;\007\235=\372\001\237=D_\t>r\200B>5i\254=z\210\341=\207\223\301\274\206\036\356<XM\333\207\365F\202\275I\027<<Q\250\334\275\310z\033>\365qO=\251\0272>\204Y,\275\r\307\257:\tx\013=\202`\021>6ZJ>]\253k\275\371\250\213\275 \035\376\275\035M\211=\2609\003\210\222\006\237=\330m#=\033\342\004\275\330T!>\314\321\303\274\200\273\204=\275eR=F@z\276E0\014\2760\271\273\275e\262\311\275\'\006\354\275zy\276=\243\343^?y\330\327;\335\367\355\207\332\245\347>:\016$=_a\240\274\250#;>\222\334\313\275T\177<\277I\336\333>\013\265\332>\352\376\240\276\214\340\360\272\314\330\013\277\324\215\236>Q\274\022\275\304\231a>\354-\311\276\0002\330\206G\336\274<\302\246\347\273&\327\033\276\251\355\277>\221\323o>=\010\036\276\226\366\007\275\203\013O=\023\251\037=\333\026\177=\353\232\022>H\224\244=H\260&=\313A\372\2740\314\327=\272\3705\210\271\206\265\276\305\222=\274M\354#\2751\022%>*f =\"\033n<\240/@=[\363t>\233^\230>P_\024>~\307S>7\334\253>\0044R>Ox\016;]R\301=\354\250\245\207\3020[=\263\350~\274\031#=9\351\027\262>8\256\232>\336\216\234>~8Y\276z\240|>\000\222B=s\257\222>\305\241\232\276\377%\031>\334d\303<n\362\247=f!\301\276\327\272\375\007\272\303\236=\312\320\242\274\0037#\276\366\204\236>\2715_=\3227I\276\243\337\010\276\034\316\254>\226\010\262\275R\362\235\275\366r+\276x=\313>k\320_=A0\023?\226l\343=\\\337\014\010\244:\013>\t\316\'\273(7\236\275p\300\213>x\036\000>\343\236\320\276.i0=\325\364\267\275\262\310#\275;\325\232<\003=\201\275\355\304E\275\346{\275=\212\267\362>\200\240T>\032\240\330\207X\371E>8*&>\236\242,=\375\270\224=\r\276\252\274\242[C\277\337.\212>{\343r=\245\370{=\365\264)>~\206\207><\035\265\275\225\034\216=\366#\022\276\234\022\202=\030\254\"\210\252\340\035\276\345\201\273=\0361\\\275aio>g\226\313=T\327\370=r\202\322\275P\330(<\345\374f<1\234\036<\251\203e=t\216r<\356\025\036<,\242t<j\231<:Zf\245\006\236M\202;\3043\351<K\273\000\274;\307\021=\233\305\276<\004\013,\274?C\'\273B?\353\275\003\373;?\277\204s?\214\362F?>\363M>\264\222>=+\030\305>\024\242:>8E\013\010\305M\241>\026\242O\276\034\350\343=R\373\022?X\346C=\242D\306\275A\366]>\270\022\233=x\360K\276\323\016\036\276\306k\322\276+\037;>v\212|=\177\003\236>\267Q\216\276z\241\264\207qV\233=\r:\330\274\2752_\276]\227\014=k\326\036=\265\304a\276\253\356\323\274\205\177c\276\247{\033\276E\345\222\276\017\013\317\276\212\345>=H\237\216=\226H\301=\362ZW\276_e\001\210\210\2333?\253B8\276,\n\237\276[\235(\276l\301(\275\326\3514\276\356\334\222>e\210\274>\035\275\305>+\230\007?\274\357\266>\245\364\350>\231\217<>a\337\276\276\235j\003>\354\272\r\010\030\257\252\274\333\322\331=\2349\212>.\274\364>\350\271\350>\254\010\027<=/\337\276\243\272\360<([c\275U\034\262;\234\266E\275:r<\275eV\364\273\224|\372<\220\027\314\273\022\301\373\207\373\373_\275\352\026f<X\266/=\357\314\230\274g\347\243\274\242R\024=&\030\377;\313\232\354\275\3718\347\274HS\004>_\223W=\025\366D\276\204z\355=$Z\252>\255\024f>]\250\000\010\376/i\276\234g\202=\253<\020=\034\372\211=]\342\341\275\354\032B\277\016\344\002>\010\317\235<\024*p<\033\310\376<\265eN\274\022\024O=\345\021\302\273W4\022;\314\245\021\274\003\013\007\010]\205\321;\260\030w<x\343\312;\247\220C<=\2467=\216F\035\275?\007i\274\205\344%\276\242\3007>W#\344>\266k|>\334\341\252=l\300\022>\201H\027?\230*\201>\027r+\0100 A>\245\336\317=g\346\236<\307\241=>f\320\"\276\364Kl\277\201k\302>X\242V\276\234\330E\274Q@\004>\377eW>)6)=\035S\333;R\363_\276eQ.=\354c%\210Z\266\235=\030,%>\352\303U\274\013n\373=5\301\227=\272k6\273\304\177\235=\000G\270:\021\306$\275\214s\250<B\205\244\274\253\363\361<z\207\204:\216\227\350\274\003\006\037<\030\253\341\207\342\305\373<\222 \220\274P\010W=.\000\246\274\236\220|=\310\004b\275\337\232\320<\022\366?=\244V\203=\006\032<>^\325\202>\255^\177=\300f!=~f4\275\265\311\377<6\005\025\210\001\001 ={\344\240\275\027\250\000=\254vz>\277\026\342<^\332\030>\312\0247=\277\3702=P\023\023=\037b\010>r\r<>4\326.<\321\035\323\274U[,\275\023a\343<L\021\351\207\264\254h\275\\*V=\253\254}\275\220$\227=\377\333!\275\372b\224=\310\370\247\275<\326\217>\305\363\237\276\377 \375\275\325\345\223\276vo\247>\310\0240\275\016\267#>\327\344\024\2760\214\024\004P\344\'>\340\262\226\274(q\274=\364\001\221>\'\365\260>\360iv\276\031\306\240=\331|\206><dE\276.\347\323\275a&\210\276m\026\213>\306k\216\275\311:\361=\267\371Q\276\326\246\213\007K\004a>5\345\310\274\332\366\346\275\306\310\220>\033\260\243=\000\001\023\276\250}\245=\2342 >\270\243\024=\335\212\352=\351\236\272\275\"\266\001?\034\342\261=\377\265\323\275\377\331,\271\223\243\203\207\003\007\325>\272\323\361=\303\312\013\276\331?F>\000v\020>\224\323\"\276\033\217\207\275\260\214\200<Hv+;\275\352\244\271\350`\367\274E\211\315:\r\026q\273a#\312\270:\001\270\274&B\215\010\260\"\234\274Ty\032=ArZ;\234\315\007=\247\345\221<\016\350k<\243_\005=\223\254\276=\321:\221\274\210OA\275\362q\372\275\022,\211=\205\022\036\274H$V\275zA8\276\226\036\204\210\350\253o\274\303\236\310\274r1g\275\275\376\310<\273\264\333\274\215\333\325\272)\303\343\274:\006!\276\205\330]\275\361\222<=\003\034\265=&*\037\276\250\013\004>p\031k?\231;\224>q\210\020\0103\205b>z\213\260\274\006\203L;\002\310->t\311\367\275\365\330v\277\021\355\335>\017\250\341><@\272>Z\260.?\331<\212= \247\277>=\310\005>\244\360\024>&\320\001\276\305\325!\210\020I(>\325hM\275P\302\253=S4\003?\206\261\245>\211\013\305\276.\221\245\276\303\216\325\273S\350\031\276\207\027\000?\310\262\234\275M\363\342\2768M\273=\036\r\257>\000)-\276\213\242\016\210\037\374\313=ws\214=\331\242->-B\305>\257}\311\275\306\361K\277\025\255;\276r\210\023\276/s\315=\325\326t>\200x\313=\277\003\037\276\034\344\r>.3\007?\007\001\213>\325\"6\010\366\001V>VS\256=\332E\t=z\353O=\301\257?\275\271Ba\277\023\022\362>\017n\301\275\331++\275\352\'S>\264\244\347<\267\331\305\275\033\006\257<*z\"?\254GW>Bp\026\010\325\235t=d\'\205\275C\254\346=1\021\247\271\316\234\356\274\274\375t\277\317oe>!\013X>~\214Z=\270\016\021>r\361E\2767\030H>\033N_=\033\n2?\021\371\026\276\235\251\r\010\347![>Z\330\322\275\214\371\021\276N\331\001?\234\n@<B6\017\277\000<\223\276\257=\245=\300\357C\276\310b_\276\206\000\262\276\020\267\320>\027\206\314;\233\227\023?\221G\236\274x\307\005\210)U\251>\277\330&\274\240P<\276\031\325!>5\302]>\222\025\240\276\266\3060>\256_\346>\020C]\276\222\260\211\275\022\305\266\276v\031\004?\360\314\330\274@\365H>Is\037\276j\320\200\007\376\235\231>\001\334y=+~:\276\036\211\240>\377Y^?\253]\213\276\034\340s>i\r\251=\305\344\205\274l\213\202>\250\251^\276\221\361\206\275\\{\001>\204SV>\306\030X\276O\253\014\210\343\274\026=\253\353\303=d\013\205>\242km>\007d\022\276#4\321\276_=\235\276\335\010=>\023\375!\276\205\236\343\275\221#\330\276\221\345\200>\206\276C\274\212\277\320>U\360\251\276\235X\344\007\340\336\311=\177\270\014\276)\2005\276\n\347\254>\270Z\330<\374\222\215;DV+\2740\317\216>[\261\236\276W\">\275\027\361\333\276T[w>\332$\276\274r\351^=\222@`\276\316\226\340\007\362\243\316>f:\335\274\216\271\304\275\250C5>\255F\231>\272\264\244\274\227D\243\275\033\032p>\034G\032\276\036j\307\275\376\317a\276^\271\321>\335H\252\274\005\304\245=\224#\227\275\"C\002\210\266\034\326>\331\266p<d\220\177\275\332L\210>\347[\004?\214\245\202\276\257\005\253>\356\323\">\006\r\"\275\225\254 =\241\237e\276\257\033\251>\225a\300<m\"\347>\342\361==\225\252\256\207\367\324`>\3708\017=\275\034\247\276\"n|>\233\312\021>\377\342\023\277\344\330\347=\177\353\204>\277\314\234=\375\344K>\235\"\263\276\320\033\321=3\202\354=\323\327\213>\357\r\257\276`\005\231\207\226\364\240>\322R2\275\364\313\212=\006\376\307>Y~\210\276c\330\344\276#<\032\277\257\262\024=\237,s\273\330\036\363\273\215e>\275\252\233\362<\277x\023<\342\356P\273c\374\311\274Vz\223\007\250\330(<RS1=rW\345\272\334\317\216\273\203\317\314<\261\004\344;\264\2047\274c\017\023=8\037^\275\006\021\305\275\3073K\276\264R\355=%5\347<;\243\360=\036\262\226\275\346\223>\210\340\010(?\017\352\237\275\312]\222\274r\367\254\275W\300\335\274Z\362\374\274\353]\016\276;\350\316\274\031\2634\2768:\232\275\022\030\225\276(\341\210>:9\227=\2018\315>\330\355\252\275(\354\335\007\023\005\254>\265{3\275\022\327\337\2755\274\037>\300\020\351>,\337\314\276\006i\247>\262\270\217;k\301\263\275\021x\010\276Z\313J\276\326\200x=\206\007\254\275\000(\257>\243J\017\276\005q\332\007\251T\262>O\232P\276\033\241\350\275\002\025\310=\200\353\233=8\304\330\275E\261\254>Y\337;\274\241g\"\275i\004\255\275\325\210}\276\357\336\351=\256\202\177=\355T\306<\345\211\'\276`%\371\207\326Nk?|\001H\276\345\312\356\275\006N\356\274\261c\374\273\002I&\274x\334q;Kk\n=\014\254\035\274\246\301\253\275\227M\324\273]\305\014;\307\353\246\274\363DK=3\376\370\275!\253\214\207\374P\265\274\352\345\026=\327\036\027\274Y2L\275\304\032\243;\326\334t\274\016\0370;\362\370/>RPV\276\211\331\250\275_\231\334\275>\361->\272f\231=L\223\215>C\201\225\275\226\246\271\207\330\236\034>\032\312\276\272%\237\020\276t\223g>\3705\013=2\214\254\276\25744\276\327\227l\274\224\022\331\274:0\373\274@\n\233\273O6|<\266\307\370\271\344\351\004;(\357\305<\307\021P\006\305\"\326\274OF{\274\267j\256\273\372g\277\274\374F\373\273\030J\007\275\265x\245<z\300\013>E\262\023\276\016\270\024\276:\312\277\276\000\017\312>\263V\242=\\X\352>\031]i\275\223A\372\007v\322\232>c\372\250\275\204\265\204\276%s\314=\030\223\331=\353\340\220\275\346P\023\275\231\373\323>\376\ro=\315\371\251=\273\255\253\276A\361\212>\374L\221=\003\327X>\177\337\211\276U\373\272\007\027\0300?\376\006\226\275g7\315=\3766\305>\367\320\233;\264\256\224\276%\203\036\276\377$\355<\010\376\307\275\004?-\274\274R\373\275$A_=-\037\037=\263U\016=\270$\323<T\334i\207S\273S\275\321|#\274\31150\275q\271\\=7\035F=\005h\226<\r\037\310\273\304my>\333\010~\275\036\206\206\274\"\335\252\276\177\363x>\377\201\017=\365W\365>a,\207\276\247\230\307\207\373\010\217=\252\030\210=r\013\213=m\273\243>M8\037=\302\351\343\276\321\264@\276z\207=>\036J\213=\376\351\000>\303y)\276I\360.>4N\n>\253V\024?+\263\022\276\320w\304\207\353 u>\006\273\017=\236-\365=\353\313\317>\370\375\301\275\355j\'\277\016\351\331\276\323O\270>>l7\276zS`\275\306+H\276b\002\006?B\355\212\274\325/7\275\306\305+\276\260I\215\007{5\271>\214\267\265=\210A\203\275\302\037\205>0FA?\3620\204\276\035\300\233>T<\217>\264\022\212\275\244\230:<\326h\014\276\313\371\265>VD\017\275\364\270$>\016v\224\2750/\236\007\027\022\277>Z\214\023=\215v{\275\364f\035>\303\263\013?g\036\026\276\326\337\020>\005\211\277>l\3310\275\310\3332\2751\357\234\276AE\350>d\317 =\363\300\235>\224s\007\276\301s\001\010\025\321\017>\371\235)=\306\211\311\275\302\321\262>\307o\317>\334\374\217\276\266\232\023>\013e\236\272!\356\370\273;\203H<Z\300\257\274_\177\236\274\016\367\\:\377\246\253<\324a\233:\030\221\224\207\022\234\212\274o\035\236<Rd\203<\225r\370\273p\371\'\274u\341\356:rq\021=p\204\311=v\321e<\212\254\215=\017\003\355\275.\220\277\273\246[\262\272\310Y\233\275\323f$\275\221\373\226\210f:/<\307X\262\273Z\003c\275K\200m\275\251\356\223=\214\231\236<\211\322K=\214n\013>\"\333\023\276\177\304n\276MdA\276!\347\304>L{\261\273\315\356\356><\237\357;\004\264\t\210\262\006\245>\204\223m\275\017%L\276L\232`>\207\233\t>\271^\342\276Np\332=\371i\024\275\356\026\351\2752u\"\276y\005\223\276\376\313\251=\241B\245\275\327\367i>>\276\214\275\356\311\377\007\244\356??\032\203\003\276\2525\020\276A\301\305\275hzy=!\2649\275<\206\245\2747\"b>\313\022S\276\206\377\306\275\017J*\276hG\255>\356]z\273\370i*>\202\262\233=\202V\r\210{\332Z>\202\230\206=b#\304\276\020\2715>\352z\242=\232J\014\277\377\261\275=\201g\210>\r\345\232\275Yw\303\275PM\244\276E\237\243>8m\265<\343\026\245>q\375\001=\t@\330\207\261\302v>\210E\211\274\275\247w\276\362u9>j\207\014=\360A\304\276\307\302\356=\332\n\226>`\036\321\275\"\312$\276NvW\276\373O\254>G\027\212=+k\177>f\'\374=\324b\250\207\224\365\230>w+j\273\353\021\211\276\252\211\200>p\361H=\035\337\347\276\027\0168=\375T\253\273\333\251\031\276\203\261\375\275\007p\222\275\273\2262>\\\256\362<51b\276\214B)<\214\341\327\007\327\304\256>{\372\331\275\364\214\207\273\3227)>O\253\022=\347\206a\276\004\236\325>\222Z)\276\243\017\320=\252\"O8c`B\2753\246\221\274\r\200\316<H\325\010>\3151*=\020\335\224\007\333\036\246<\367\205\313\275~\352\035\2761\226_\274:P\216=V\313\340=\354p\002>p\244\270\275^N\026\276\021hR=\235\216E\276\036\346\'\275\220\341#\275JtO:\316\213\243<N\325W\207\313v\225<La5;kE\312\273A{A=\331\300\177=\331\217*\275\2667\010>[\247\240>\207x\"\276\257\317\233=|\t\255=4}p>\363x\327<\306\337\343<\245&\r><\255m\007e\201O>\'\240\022=z\013\221>\361\244\027>a\332\205>\307\333\212\2761\0105=\212\013}=\014\027Z\275\221,\362\275\n\260\351\275\376\027\t>}/\244\275Y\262H>t\206L\272\274\322\340\007\325\354$>\"\315L=T\3037<\265\227\270=\213\351\212=\216O\212\2757\367\250=\333\372X\274;\216\323\275I7\273\275\n.\321\275\335MN=\372\212\215;\372\335\276\2753\316\350\275\313\036\347\007\260\334\340<\024\213\006\276\234X\335\275I\023\020\276\010\033Q=\206\224\000\276\307n =\316\215q\2755\354!\276\354\025\206\275e\265\347\275\010R\232\275\234d\326<\025u\r\275%\243\027\274w\215\261\0070\235\353\274s\240\263\275~\022\315\275v\030&\276\203\234\337\275\256Y\333=K\332\370<`H(>\240<!\276\034U\326\275y-\031\276\222V\246>\264\372g\275\005\330G>\tK\210<\361\373<\010\370\360\232>:\334\347=\372\334\337<7\0017=\217\341\003?+\233\274\276n\354\017?\340r\312>q\005\227\275\202\231\027>\343\302r\275\360\365\304>\335[\034=9-2>\366\316\352=\370\036\272\005i\246\373>\002U\274\274y8\217=ca\304>\231\357\222>fX\267\2763hG>-\034\367\273\010\270\301\272n-\221\274{\366S<[\262\332<\365\316\030\274\247C\305<\271\2021;\254\254E\0107\315v<\375K\213\274e\335_\273\272\254\247<\213U\342;Z\211\224\273\2203m\273\307E\310\274q\330\033\274\225\312Q\275-8\312\275\207\365\216<CV\275\275\201+\221<z\351\353\275Z\025\325\0077\003\036=O\330c\275V\016\277;G6\302\275s\347\257=\333\2272\275U;\341=\330\351\370\275\302\272\201\274\272\021B\276\364\353\262\275\001\367\355\275U\001\251\274\037D(:tj\230\274ul\327\007\367\251\264\275\343\227\357\275/^\032>\333V\220\275hY0\276=\200\315=\t\220\345\274i\002\363\275\362_o=*\251\273;_\264\017<\240\207\351\275\272?\222<\361V\376\275\203\327u\275)E\000\010\220$\255=a\"+\276R\366\302\274=\0133\275kh[\276;\033\357\275\273\003\221<\271\324\210\273V\300\213=\365\013C\275\036}\224\275\027\350\371\274\342\302\222<\275\362\237\274\256\r\214=)=\006\210V\200\360>%\026\234\275\203\002\267\275S+\000\276$\217O=\215\021\304\275e%\233\275\032\304x=\364\017\r=\360R\024<\214\250\256<\215\037\235\273\270\247\355\274Ox3:\355\3769=\276\236a\010\236\256\203\2754\371\271\273p\240\266;c\005\353<\253P2\274\212\240l=\277\377*\275&\251x>\370\201*\276Y*\313\275\265\256\235\276\350v\331>4\302S\275M\365e>q\263\214\275:\213\255\207\n\353\226>& a=\256\202\023\276\"\201\017>$\377\031?\000\237A\275\340\245\257>\2641\267\273\351\337\341<f\331\216=\320E\234<\366\257\300<(\233\247\273\014N\257<h\363\t=l\311\004\010\376\206h\274\210\252\276\273\005\337\227<\270\251M\273\266\037\230;Uj^\2753\240R<\031\034\253\274\324\272\224\275\370\346W\276\31502\276\230\\\363=N\323\210\274j\202`>\346\n^\275r\2313\010pn\370>\377=\216\273]\253\351\275\017\340\217\275\324\264\351=\200\344D\276aL&>C.\261=\362\006\"\276-\353+=\"\365\023\276\024\350S\275\005!\366\274\326\253\002>\n9\211=\006\336\377\207=_\213=\311\333N<\211(\343\275\353\237V=$>\214=Wn\232; \0351\273\345}\217\274\307K\246;\306\306\t=\207\004\352<\376:X<[Zs;T\034Q\275\237a\306<^F\240\205+2\253:\021\t\253<\221(\032=uc\242<\313\355 <D=\261:>\037\235\274\250\025=>}L*\276\024\277\002\275A\271\202\276N\332\350>\032\251\005\275\360\261K>xM\307=N\027\324\007\2510\357>C\241\222=\035\313\r\276y\335\216>\023g\035?Lo\315\276\300/\275>K\000^>y\360\223\276A\262B\276\321B$\276Z\r\233>Pn!<\036U\214>4=\313=\240~\247\007W\300\227>\026\000\360=\370b\261\275\37613>D\'\260>\222\025\352\276T\331\215>\352\365\223\275\261\256\034=\204\332\360\274\031A\013= \227\t\275\346\202K<2\235\275\274\200HW\2750|\023\210\3042\325<\361p1\275d\237\314\274NH\365\274dq\316\275\332\263\313=\020\263\020\272\230\211\004\2751\306r\275Q\245\257\274\246\004\307\275X\007l\275\354,\204\274\227\203\230\274\031vv=\217.M\210\023\344(>_\366\205\275\263\323\035\275*\310\361\275\371+;\276\004*\241=\036\340\243=s\262\221=\233$\\\276\223\024\325\275\000\346\225\276H\244H>9\247\'\275+R\243>\372YC\276\234\022\273\007\256\024a>\"f[\275\rX\246\275\204\245\251>C\345_>q\307-<\227\nr\272\365\237\237<\345\226\031=\277\270<=\000F\334\274\"\272\003\274\005\024\275\274\002/@<\016+\245<\366\215\215\010\377\370<\274\245T\207<\3313\320\273\367t\302<3o\006<\235`\203;\314\273\005=\265\250\007=\260\373:\273E\255\030=T\212\002\276\030\014*\275\355\030\345\273E\237\276;\245\371\222;\364K\246\210\302\224\247\274\"\305\362\274\006S]\275\003\240\316\275\025L\003<`\036+\275\026C\243\275\031{\347=\353*\001=\033\374\025\276\342\363\366\275)\325\204>\224g\327<n\032\230>\030\335#\2742J\030\010\275\236\032>y\223\335<\304\356\345\275\017_\035=\272\330\315>\317i7\276\236\327]>\313(\244\275\227$\263\275GU\352\275\212x\035\276\t\362\304\275H>\304\272\2009\3059\014\213\\\275\336j\023\010,&\246>\375\203\000\274\224\217\374\274\240\264W\275;r$\274V\373@\274T\365S\276\211\263\206=q\241\230<t1\305\275\366\331\353<\255\300v>\223\253S\275@;a>\376\214\376=@\224\266\207\322\332\022>\202x\223\275\355C=\274\210\373\235<\304&\316>\272G\252\274\230\371\244>\340\246y>)\306\'\276\034\330\315\275< _\276+\331\271>r.\204\275Z\366\212>\352\256\230\275\347\275\305\007\333\350\262>7R\232=n\305\365\2749\325\002>\274\031\346>\024\365\250\276\350\003\265>\342\220\343=\354\326\206\276\001\207\027\276\000\244\232\276\r\242\252>\363\016\273\275\262\376\273>;X!\275\007\270\271\007\222\212\003>V\275\n<]y;\276\332\372)>\313\237\337>\200\264\242\276r\273\303>\364\371\310\277\360\341\r\3008A\212@\005\311\211\300hj2\277\234\357S\276\355\303q>\2022a@#k\330\007\347\331=\274\177\361)>s\347\t\276Wm\027?\000z\023>\353\027\236>\210\220*>T\307=\275lf\371:\324\032.<\002\356*=\237Y\311=\211\tv\277!\343@<\005\355w\274\345/\363\207-\273\225=\034\274e<s1\244;\226\254\215\275W\320\311\274y\222\350\274g.n<"
      }
    }
  }
}
node {
  name: "model/dense/MatMul/ReadVariableOp"
  op: "Identity"
  input: "model/dense/MatMul/ReadVariableOp/resource"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/dense/MatMul"
  op: "MatMul"
  input: "model/concatenate/concat"
  input: "model/dense/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "model/dense/BiasAdd/ReadVariableOp/resource"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        tensor_content: "n\314\327>[>\222=\005-\216@\233\241\261@~\203\244\276\032\016\307\276\335t#?C\330\207?\270\242\340\276JV\214\276K/\003\276\367\\\232?\273\0035\276\235\365\231>3\253+\276m\350k?"
      }
    }
  }
}
node {
  name: "model/dense/BiasAdd/ReadVariableOp"
  op: "Identity"
  input: "model/dense/BiasAdd/ReadVariableOp/resource"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/dense/BiasAdd"
  op: "BiasAdd"
  input: "model/dense/MatMul"
  input: "model/dense/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "model/activation_2/Relu"
  op: "Relu"
  input: "model/dense/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/batch_normalization_1/batchnorm/ReadVariableOp/resource"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        tensor_content: "zP\223A)\235\236A\031\206}B\374A\224B\004\303\252A^\366wA\\\207\244@\010p\234A\204\016\307\003\323:\004>\261\362\273?@\231\263@*\343\006B\304\271\275@J\333\205A+^\234?"
      }
    }
  }
}
node {
  name: "model/batch_normalization_1/batchnorm/ReadVariableOp"
  op: "Identity"
  input: "model/batch_normalization_1/batchnorm/ReadVariableOp/resource"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/batch_normalization_1/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000475
      }
    }
  }
}
node {
  name: "model/batch_normalization_1/batchnorm/add"
  op: "AddV2"
  input: "model/batch_normalization_1/batchnorm/ReadVariableOp"
  input: "model/batch_normalization_1/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/batch_normalization_1/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "model/batch_normalization_1/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/batch_normalization_1/batchnorm/mul/ReadVariableOp/resource"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        tensor_content: "$\201\245?\377V\242?A\212\335?X\204\010@z\254S?\375\037%>ua\251?\254O\243?\363\237G\274\360K,?\030\272\020?\351\032Y?\257\320\276?e\320\202?\321<\241?\205,\013?"
      }
    }
  }
}
node {
  name: "model/batch_normalization_1/batchnorm/mul/ReadVariableOp"
  op: "Identity"
  input: "model/batch_normalization_1/batchnorm/mul/ReadVariableOp/resource"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/batch_normalization_1/batchnorm/mul"
  op: "Mul"
  input: "model/batch_normalization_1/batchnorm/Rsqrt"
  input: "model/batch_normalization_1/batchnorm/mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/batch_normalization_1/batchnorm/mul_1"
  op: "Mul"
  input: "model/activation_2/Relu"
  input: "model/batch_normalization_1/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/batch_normalization_1/batchnorm/ReadVariableOp_2/resource"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        tensor_content: "\032\311-\276\277\262Y\276W\256>\277\312\037\303\276\244\224=\275Q\225k=\322\316\327\275\010\010Y\276\000\277\036:#\230\354=\3374\335<\031V\224\276=\345\210\276\247\300\223>%\2711\276\325\033x>"
      }
    }
  }
}
node {
  name: "model/batch_normalization_1/batchnorm/ReadVariableOp_2"
  op: "Identity"
  input: "model/batch_normalization_1/batchnorm/ReadVariableOp_2/resource"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/batch_normalization_1/batchnorm/ReadVariableOp_1/resource"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        tensor_content: "F\262\326@\342\027\331@H@\204A\035e\230A\331\304\217@\301\257K@\215\203\365>\312D\337@\332\317\307\0032\212@<o\024\321=\320/\034?c\236\317@\257\342\223@]\351\365@5X]>"
      }
    }
  }
}
node {
  name: "model/batch_normalization_1/batchnorm/ReadVariableOp_1"
  op: "Identity"
  input: "model/batch_normalization_1/batchnorm/ReadVariableOp_1/resource"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/batch_normalization_1/batchnorm/mul_2"
  op: "Mul"
  input: "model/batch_normalization_1/batchnorm/ReadVariableOp_1"
  input: "model/batch_normalization_1/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/batch_normalization_1/batchnorm/sub"
  op: "Sub"
  input: "model/batch_normalization_1/batchnorm/ReadVariableOp_2"
  input: "model/batch_normalization_1/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/batch_normalization_1/batchnorm/add_1"
  op: "AddV2"
  input: "model/batch_normalization_1/batchnorm/mul_1"
  input: "model/batch_normalization_1/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/dense_1/MatMul/ReadVariableOp/resource"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
        }
        tensor_content: "yk\250\276\307\216\233>bx\'\277\2124\357>\213\2220\275\272\177\305\276\270\262\260\276\374\026-\277\312\n\255\275X\036\212>\241\361\272<\364\375\005\276\272q\216\277\300\021\370>\031\277K>\003\214\333>\\o\261\275\345\211\367\276S\321w\276\000)5\277n\017\264\273-\372\'?\300\303s>:a\273>\3560\314\276(\207\220\277ax\026>\026\367\024\276Wi\215>\206\220\032>mM\200\275\330\272\">TwV\275\270\301n>>=\323<\345\260\207>Y\355\013?e4\250>OH\247\276\212q\016>\005B\371>\002\303\037?\356\r\332\276\373\016\026\277`4h\276\000\220e\275\023\246\240=\241\3433\277\r\225\303\275 *,\277I\305\352>Ei\241\275+\343\321\275\246}\020?g\354\216\2763\214\254>\357\332\374>\312\277\260\276n\212\262\275#E@?\316\207\200\2763\275M\277~\352\237>R\342\377\276\037\225\234\275\367\370\303>g.\262\275\2356\237>c/\314\276\027)\215\275\210\013\246\275\240.V\276\270\177l\275\222\246\305\276\237\277\335\276\273\301\217>\2649]\277F\005;\277\270\247\333=\343\t\301\276\014K\276\274\337\353\223\277#$\226?4.\334<B\021\345;X\205`>j\307D>\227\233\200\275\344\335z\277\304\320\367\276S\0022\277v\342\277=U\213H\2774\277\274\276\253\272d\276\220\327\201\276v\016\314\276j\026+\275\006\321\346\274\367\307\361\276\247\006\321>x\224\177>\355\004\304=\365\317\267>\270\207y?\014\"`?E\332\371<<\361\363\276\025\236\007\277:\215\205\275\240\023}\276\016Uu\275\225\365\367\275\203@\215\2750\303\315=B)\207\275\347\3457\276X\037u?~\256\214\275\366\362\204\276-\t\300\276\270\350\245\276\346\014\255\277\274\221\277>\225\237}\276\201\354\306\277gR\215\276tP\307\275M\267M\276\204\364\373>6\024\217\276FR\253\275^\341%>\321\3531\276F]\201>\036\346\007\2770\030\243\275G\302\366>\312\313j>G.\335\275\213\353\205\276\203\"\365>\315\327\200>1%h\276;e\253>\337S\005\277a\3533\276\216g\337\276\323\357\333\276\014\036\362\275E\373(\276\241\354\202?<\034\350=&\213\006?\242\326\264>\313\323,?\374T\352>1\006;\275SX\307\275\373\004\032>w\261\\=\033\347\301\275a\314c\275\347\376\237\274\001\343O>%\346\021\276\331;m\275\235\277S\275A5\202>\366=^>\205\363\245>\354\203b\275\003X\240>\246v\311=}\236\212=\r\237\320=\325\2516\276\355\222\355=-xq\276jl%=mJc>a\272\223>\327$X\276\347%\231>\257B\226\275\266\243\220>(\243\301\275\315X\205\273\335mr=\203\272+\276\014\027\027\276$\345Y=\003\357\300\276\315\024\364>J8}\276m\311\247\277!\371f\277\342\230\253\275\031\"->\200\005\351\275\003\374\004\274{+;>I4\227\277\336\004\324\274TO\233\275\344\237\306\275n\263\330\276L\\\347=>^\212\277*\037\021\276\316iC\276\257\373^\277\351\307\023\277\246QK>\022\344S\277\373\314\262<\356X\237\277t\320|\277\037T\030\275[\004]>2\006 \276\276\317%\276&G\232\276\200S9\277\205\200=\277\270`\315\275\344A\020\276\314|y\276a\301-\277)\324\032?Kz\263\276\030\023p=Gl\204\276\t\002D>Y\273:\276\005\375\343\276)L\204\277\024\025V>\316\014=>\230@N=\306\345\360<xr;=\334\307\323>H\354-\277h\356|\276$\245\311\276\0145\240>\322\031U\276\026\355\275=\3111\234\275\024 e\2762O+\276\007\270\232>\2724\003\277\210\367\227\273O\203F?J\'R\273\233\3305;>\204m<L8\312;i\020l\274\303\352\2079\200\376\265<\207\330\351\274<\177\230<t\236\335\273 \201\031\274U\363\021\274,|t\2747\323V;\354\203\225\274\177\263\031\274\222C\223<\215\360\211\274\343\026\245\274\267\277r\274\267h\214:\352\206\005;\361\377E\274\203\344\200\274\004N&\275D3.\274\376>{\274L\007\024<I\314\214;\260k\270;\276\275\236<6~\271<\313G\331>\033\316\306\2765\373h\275\256,\251\2730\305\016\276\030s\252>f\363f=\037\225\035\276k\213\256;M\334\375<\027\266\236>e\337\032=\360\350\210\275\221cL<\244\271\022?\023\302\335=\n\254P\2765G\223<\375\211q>oM2=\255\303\250\275\211\351(\275\005\276\207=\0309\021\277\225\222:>a-\217\274R\020\246\275U\253\224>\013rN>\255\351e>\324X)\275\343\203:?:\n\261\274{\007|>8\273\010\277U\266\306\274S+\235\27659\323<\014\246S\277C\363\"\2771\271\177\275y\351T?3\247\355>{\010 \276g\251\246>T\330\361\276\035m,=3\0346\275d(\360=\037m_>\213\233@>\353\311\353\275\003o\361=1\215{\277D\342a\277q\362\236>NfJ\276U\246\000\276Md\330=I\345\365=\247k\303>pbS\275!\227\013\300\253\000]>\265\326\242\274\213.\301>\225\353B\277`\317\362\275\245M\254\276\340\212T?\002\013\351\276\016\005\247\277\313*\242>\n^\036?\266W\033\276)\031\r>\353\2543<\257\334b>\t\325u\277\322J)?9q\303>\255\227\026>]x\251>\311\023o\276\232\372\034?\233.\370=\227P\331\276\323;\014=\301\216\356\275)\262:\276\2501\372\275\205\312G>uI\002?\302\205\354=\223V\302>2\365\355\276A\354C?\374\320\363>a>\304\276/b\305\276\267\3507>\257$\370\2766\0208>\242\252\231\276\275\244\204>b\241\274=\375\345\344\276P\374\237>\010\220\002\277\341\327\304\276\002\177\212\274\264\223\206\277ap\205>\031j\032\277\215\260P\275\\\207\\\2760\251\322:$\324J\276^\256\235\275\331\014\000?YS\002?\226\243\267>t6\277\276\201q\217?\037\306\367\275u\263\351\276^\322\003\276\334\234\203\276\002~q<\2123.>\300\367\316\272\232:R>\323R\010>\222\332\022\277\303\322V\275u\275\272\276\252[\216\275\t\262x=b\030\035>\036\206\315=\2771\300\275\202\"+?\340\2212?\256z\250\276\220\207V\277\222\313\256<\031\203U\276\355q\302\276\362\227\033\277\265\237\233>\207e\256>4\264\247>?\316G\277\321\360\315>\014\303;?\013\027y>`i\244\275\025\254\342=\322\201\'\277\313\273\016=\331\314\271>?8\030\277&\265\361>\271b?\277]\270\347\275\026\374\003\277\3222\214\277y\227\365>$L\'\277\317\t\206\2733\036\000<\221\\\374\276m\377\220\275\3141\005\277\216\331\252>\004!\\\275\365R\226>\001\n\300>|\223\242>\006B\276>\241Z\343>\232\236\217\275Z\331\222>d\202\357\276W;\252=\233\244\316>;\377J\277W\320\364\276\232\245\337>|v`\277\337\016\301=i\272\007\277\262\030\037>\245\316\205>*\004\375\276\312Z\214\276\324\022)\276\257\301\360>\352\035\224>|\034\212=\247=\301>S\374\216\275e\200\030\274X\027\313<\342/;>\357N\214\276\203\320x>\3343\233=k\276C\277t\250m>\352\014\227\276\306\014\365\276R\240\346\276\222\024}\275C\200\326\275\347\263~\275\305{\t\277\215k1\277\215\362>\2757A-?\270\035\206>{}\223>c}\333\276\301\315?\276"
      }
    }
  }
}
node {
  name: "model/dense_1/MatMul/ReadVariableOp"
  op: "Identity"
  input: "model/dense_1/MatMul/ReadVariableOp/resource"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/dense_1/MatMul"
  op: "MatMul"
  input: "model/batch_normalization_1/batchnorm/add_1"
  input: "model/dense_1/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "model/dense_1/BiasAdd/ReadVariableOp/resource"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        tensor_content: "\004\005\n\276\200\330S>\331\220\327\276_\342W\276\341\321f?\037\032\032\277\361\213\343\274\210\301R\276n6\017\276U\346\027>\"6S?\205|b>\276\275\274=\260\263\323>\004x\017?\354\377\310>LE\311\276\022R\212?/;]\276\032\\t=\2042z\277g\021e\276\332\303y?\264\315w\276\356\275*?\027\017\366\275\374\332M>\344_\315>\214\245\214\275\036\201\230\273\306\333\002?(\204T?"
      }
    }
  }
}
node {
  name: "model/dense_1/BiasAdd/ReadVariableOp"
  op: "Identity"
  input: "model/dense_1/BiasAdd/ReadVariableOp/resource"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/dense_1/BiasAdd"
  op: "BiasAdd"
  input: "model/dense_1/MatMul"
  input: "model/dense_1/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "model/activation_3/Relu"
  op: "Relu"
  input: "model/dense_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/batch_normalization_2/batchnorm/ReadVariableOp/resource"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        tensor_content: "\333[\210>U\024\030@z\376\233>\247\257\247>o\355\314>(\244J?\177\225\267?O\230C>9\217\342?\2138\277@\036t\317?\370a>?\243S\341@\2050\026?j\014\341?\247v\020@]\240\251>k4\242@\237\237i@\236%{?U\271\224>\241\020\234@\2606D?\020H_?\232\277\256?\362R\207?Y\240\247@6]\362@\206z+?\005$\356@]\370\362>l\275C?"
      }
    }
  }
}
node {
  name: "model/batch_normalization_2/batchnorm/ReadVariableOp"
  op: "Identity"
  input: "model/batch_normalization_2/batchnorm/ReadVariableOp/resource"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/batch_normalization_2/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000475
      }
    }
  }
}
node {
  name: "model/batch_normalization_2/batchnorm/add"
  op: "AddV2"
  input: "model/batch_normalization_2/batchnorm/ReadVariableOp"
  input: "model/batch_normalization_2/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/batch_normalization_2/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "model/batch_normalization_2/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/batch_normalization_2/batchnorm/mul/ReadVariableOp/resource"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        tensor_content: "\000\004L?_\017\360>\244;T?\275\021U?M\360\001? \200K?Qk\t?\367\341H?H\006:?\256\205w?\362\324/?\274I}>\200\017\260?J\330)?X\371^?\036\320\n?\201.\265?I\326u?\361w\206?,\2170?\202\233s?\375\261f?\203\365\376>\231\025F?\010\327\223?\251t\253?\246\356\213?\030\332\212?WU\230>\210\026\312?\217k\222?\344Ys?"
      }
    }
  }
}
node {
  name: "model/batch_normalization_2/batchnorm/mul/ReadVariableOp"
  op: "Identity"
  input: "model/batch_normalization_2/batchnorm/mul/ReadVariableOp/resource"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/batch_normalization_2/batchnorm/mul"
  op: "Mul"
  input: "model/batch_normalization_2/batchnorm/Rsqrt"
  input: "model/batch_normalization_2/batchnorm/mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/batch_normalization_2/batchnorm/mul_1"
  op: "Mul"
  input: "model/activation_3/Relu"
  input: "model/batch_normalization_2/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/batch_normalization_2/batchnorm/ReadVariableOp_2/resource"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        tensor_content: "\263\356\230>\314\370\273>\030\310k?{v\366\273\277\250\220=\365\304!\277\014&\006?di`?\333\254\322\275\242\0349\277fi\033\277A\232\376>\n%\204\277\366\003\350>^0\003?}\346P\277\207I\367\276\202\210\224\2771\207\036?\036\377\275=h\372\312\275q\023\254\276\374\017\367>\343^\207>P7z\277\037\321\224\277\330\017\216?\263\006\267>\371j\211>\302\003\203?r\371\213?\0205\207>"
      }
    }
  }
}
node {
  name: "model/batch_normalization_2/batchnorm/ReadVariableOp_2"
  op: "Identity"
  input: "model/batch_normalization_2/batchnorm/ReadVariableOp_2/resource"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/batch_normalization_2/batchnorm/ReadVariableOp_1/resource"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        tensor_content: "\036\371\026?\257 )?Z\367%?u<;?\312\370\273?\314\244\222>\343\374\230?\266C\023?\242=\023?\236/\221?[\303\t@\317\374\211?\177\262d@\206+\246?S\006\257?+\243\336?cz\024>\341\220W@y\350:?\301\252\241?\350`\010>\3151r?\222\341\250?Zb\311>\377\370\342?\177,\261?\204\334E@\344\211\254?\274\372<?\225ih@\357BO?^\357\313?"
      }
    }
  }
}
node {
  name: "model/batch_normalization_2/batchnorm/ReadVariableOp_1"
  op: "Identity"
  input: "model/batch_normalization_2/batchnorm/ReadVariableOp_1/resource"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/batch_normalization_2/batchnorm/mul_2"
  op: "Mul"
  input: "model/batch_normalization_2/batchnorm/ReadVariableOp_1"
  input: "model/batch_normalization_2/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/batch_normalization_2/batchnorm/sub"
  op: "Sub"
  input: "model/batch_normalization_2/batchnorm/ReadVariableOp_2"
  input: "model/batch_normalization_2/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/batch_normalization_2/batchnorm/add_1"
  op: "AddV2"
  input: "model/batch_normalization_2/batchnorm/mul_1"
  input: "model/batch_normalization_2/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/dense_2/MatMul/ReadVariableOp/resource"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
        tensor_content: "\253,\376\276\364\350c>\335\261\346=\220\353\360\276\221/\347\275.\270A?\3625 ?oOf\276\274c\\\275J\375U>A\246\304>\030U\263\276:FK>\216}\365>\337\210\227\276[\274\323=d\361\277>\263\360\315\274:\201\362\275iS\247>\372_\300>\246Hc=\347\010\343\273]\2758\276\204S\254\276\246*\227>2\272Q\276\334\213.=Q\222L\276\344!4\276\223=\314=\376\\,>\212\007\312>:\267$\276\206\023\035?\217U\322>Vd\035\276\005\353\r\275\362\363W?\027\255s>w\325\212>7\221\013<\233_\201>\315\302?>\254ke<\312\225\355\275&\337\314>\213\017l\276\312L\001\277\030t\364\276\022r\307\276\372\241\362\275K\366\371\2756\304\265\275\326\2535\276h<V\276\252\347\200\276T\375b\275\351U\252\275\262\331\t\277Z\210\024?\330\354\'\277\341N\310\276r\300\306\276D\234\323\276\207>\203\276l\\\253\275=\311\356\276\277\324\010\276O6\324\276*\000\254\276\326\n0\276\300\334{\276\254\2364\276\221\221\223\276\314\261*\276\235\337`\277#\316\352\275c\234\010\276[\034\203\276\322\333\330\275\215\237\224\276\341\273\326;\361\016A<+4\223\277\362\315\204\276\345&\034>\260\\\260>\230.M\275\003b\201\277\247\330\235\275\232]\226\276\272\215e:\305y\r\277\336\r\203\274#\030\031\276\346K/>J!;>\252\237\250<\270\216\217>P\t\276;3t\234>\014v\235>\236*\222\275l\017U\275\234Z\356\274C\356Y\274h5\376<.\221H\277\207\347P>.\001\201>\'\217\263>\r;G>\000\366|\276\020\377\325>\273\370\027?\252\326b>\346(\233>\013\210\017?W\000\356<\004\376\335\275\301]6\277*\314\253\276\275\321\260>5R\242\276\n\342E\276\253\371P>\230\354\332\274E\217\031>=m\312\276\310~J\275\224l\340=<g*\277zfK\276i\027\003?\220\203\356\276\205\254\270\276\344\231\357\276\227}\245\276\222\023#\275\005\334\022\276\254\004\302\276\232\370\240\276\337s\376\276\2201\002\277\341N\374\276\037\331\222\276~\302h\276\251\246a\277\362\335c\277H\315\034\277 \016\r\275\025i`\275\216\017s\276\201n\372\275n{\310\276[\305\235\2765\351\002\277\347\022\203\276\301\355\005\277(\003\365\276\217G\264\276\321}\223\277\200\256\036=\375t\317\274W\242\254\276\353\311\352\276\352\"\377=\240\243\022>\354\034\265\275\367\237\233\275\213\224\210\276\237\017K>\016\362\272\275\300\253p\276\232<\005\277\266\036\234>\032\211\266<\263\001b\276x\216\271>b\276\213\2761\350@>!\353\021?{\224\236\275\305\336\376<sj\020>X\255\264=\327\003L>\343BU>M%=\276\274\341\374=R\346Z>\272XO\276A\225F\277\3013N\277n$2\277\325\255\326\276\333a\316\276/\303\345\276\000`\013?s~\r?\262\356\014\277;\361P\274\357eY\277\3513\314\275\236\270\341\276#\253L\2776a\273\276T`\251\276N\231\354=C \007?\337\221\353=~\246\010?\345A\251>8\020\256>\204\225#\276_\221[\276[t\006?@\211\240>\001\345O\27608\017?\216\317\027>\323Q\263\276\265\034\032\275\342Q\303=z\207\350>M\242\320>\002\030#\277%A\243\276\205\320\216\276\210\343\214\276\335V\240\275\004l\227\275}0\027\276\010:\347\276\'\234\230>Z\352h\277;=\345>\273\204\327=\004\021\007?\346A1\276\"g\030\277mz\300\276\r\3426\277f\327\201\275y\016\020\276\216?\257\276\335\327\000\275\265C\322=#\366\375\275\322\314\024\275q\026U\276J\3107\276G\246\030\277\364\347\346=^\367\213\276P\213\235\274\2645\274\277j$\034<\017D\024>/o8\277\030\004\270\277]\203\361\276&F<=\327\265(\276G\276\216\277\340J\217=W@\234>\026\020\026?R\322\231\277\377\235/>\364\031\240\277h\310(\277\375m\221\276[\305I\277\241X\010\277\'\217(<\022\000\240\276\265\342\225\276M[Q>\2350D>w\301\234\276\310R\242\275\343\202i\276y\336\206\276\305\037\341\276\253\267\006\277\213\3651\2773#7?\000\033,<j\020\213>\220B\017?I\370\307\276\252\'\034=Vl\200>5\260\336\2762\223\317\276f\257\303>\302\0372\277!\350\331>\017\003\310>N\177\242=P\371\315>*a\276=\024\225k\276s2\245=\266Z=>\363v\232>>\243\322>\334\265\267<8\242g>\202\355\002?n\334)?t\"\232>X~}>l\030\030>U\0039>\037#\273=\032,@>\247\013\215=\316y\256>\332\351$\276U\000Q>,\275\231=\322\211\007\277\246\344\026\277\311\354G\276\204\305+\276\225\306\222;P\231 \277\265\014F\276M(\273>r\003D?E\316\016\276n\372\027?k\367$\276&\251\224\276d\265\010\276z+\267\2760\243\365\276\316\253H\277ov\240\276\212w\346\276Vj\030\276\270h\373\275e\374$\273\363\270\361\275\013\340\311\276_\214\232<\217\236\375\275c\250\273\276\\If=h]6>Dn\357=\215\261C=\264\373\\\276|\303,\277\331X\321\276\033K\303\276\203P\244<uN\356\275\311T\345=\204d\030\277.\314\016>\263\032F\277&F{=\277\3327>\030\301,>\006v\210>\3670B\275\220\351\376=\377>~\276?\037F? )\241=/q\312<\352\3425>\331\273\006\276\260\271r\275T:\355\275\002/\214\273\224\330`\277\253\221\221>q\320\236\275\026\351\017>aO\n\277\005\371\246\275\010\351.\277\274?\243\276\374=\313>M\336\340>\2576\216< \314\002?N\2051>\014\341\352>\014\016\267>l\277,\277Y\223;>\360n\354=\370\213U\277\246\035\265\275\375\242\025\277\321\354\322\2741\035\274\275\231<e\276\257\010\r?\207r\324>\005\216\235\276\230\277\355>\314_\240>BK#?\313\177\032\274Pa\217\277m\241\324\275\370\2631=\354wO\277\223\214\304\275\037Y\270>\244ln>\2051\220=WH:?\221\177f>_&\341>\003=\243>\367\235\215\276-y\371\276\263\267T?\005\014\026\277\345\356\003?\236c\334\275\341\007>>o\261\017?\362[a>\206a\016?c\003{<\356\021\211>\225\272n>\306i\333\275\236)u=Z\034\036>\267y<\277 \021\"\2778\240a<* \212\277\"\311R>\224(%\277\354\177,\276\216\212\254>\235\276\230\275SB\n<[\376A=\367.\300\276n\241\031<YqV\274\270\230L>\2117\336=\260]\243\274\375\321\341\275G\273~>\020hc\276\t\352\243>\237:\010>\367\365\017\275\332\t\337>\370\242?\276H\253>?\021,\033>\242\033\323>c\023S?\332\344F\276\303\332\207>\336\327@?\351\301\355\276\354\276S\277Y\266\031?EC\316\276/\205\035?\365\361\004\277/\214y<\214\271\t?\236]Q>\305}m>\020\317\010\277\344D\363>\364\367\"?,\204\220\276\375\223\252\276\003g\000?JX\"\276\201\006\223\276t\tL\276\334\3421\277 \212\323>\325R\255;\221t(\277\025n\003?\302\2251\277M\027\317=\376\271\375\274\356\214\033\277,F$>3\356\244\276\034Wk\276i\242\222\276\254r\244\275&{V\277\324\276P\275\365`\232\275.\254H>\211\374\275\274\270\311d\276.9(>\315*\036\276"
      }
    }
  }
}
node {
  name: "model/dense_2/MatMul/ReadVariableOp"
  op: "Identity"
  input: "model/dense_2/MatMul/ReadVariableOp/resource"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/dense_2/MatMul"
  op: "MatMul"
  input: "model/batch_normalization_2/batchnorm/add_1"
  input: "model/dense_2/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "model/dense_2/BiasAdd/ReadVariableOp/resource"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        tensor_content: "\253\000h@J\321\371>\255\342\003?\201\330\322@\202\234\010\275\217\241\036?\300\301\205?Q\204\n\276\231<Y\275\307\036\010>w*\273\275\370$\243@\314\247\267>\372*\027?\234\327\307@\234\200\337>"
      }
    }
  }
}
node {
  name: "model/dense_2/BiasAdd/ReadVariableOp"
  op: "Identity"
  input: "model/dense_2/BiasAdd/ReadVariableOp/resource"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/dense_2/BiasAdd"
  op: "BiasAdd"
  input: "model/dense_2/MatMul"
  input: "model/dense_2/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "model/activation_4/Relu"
  op: "Relu"
  input: "model/dense_2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/batch_normalization_3/batchnorm/ReadVariableOp/resource"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        tensor_content: "\342\277\301@wR\257@\356\250\301@SNY@\020\"\350?\255\245\301@\221\201\347@\377D\036<\t\270\277;Q\315\256@\216R\021;r\037\275@\354\240H@\340H\202@x\367\247@a|\312@"
      }
    }
  }
}
node {
  name: "model/batch_normalization_3/batchnorm/ReadVariableOp"
  op: "Identity"
  input: "model/batch_normalization_3/batchnorm/ReadVariableOp/resource"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/batch_normalization_3/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000475
      }
    }
  }
}
node {
  name: "model/batch_normalization_3/batchnorm/add"
  op: "AddV2"
  input: "model/batch_normalization_3/batchnorm/ReadVariableOp"
  input: "model/batch_normalization_3/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/batch_normalization_3/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "model/batch_normalization_3/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/batch_normalization_3/batchnorm/mul/ReadVariableOp/resource"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        tensor_content: "d\371R@\315\002.@CiL@\347\255O@\232\373I@Y\210K@\265Y?@\350\233\017@\213v\035@e#[@\317\034\370?Y\337H@\252\"l@\003(#@X\340I@\002\330\034@"
      }
    }
  }
}
node {
  name: "model/batch_normalization_3/batchnorm/mul/ReadVariableOp"
  op: "Identity"
  input: "model/batch_normalization_3/batchnorm/mul/ReadVariableOp/resource"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/batch_normalization_3/batchnorm/mul"
  op: "Mul"
  input: "model/batch_normalization_3/batchnorm/Rsqrt"
  input: "model/batch_normalization_3/batchnorm/mul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/batch_normalization_3/batchnorm/mul_1"
  op: "Mul"
  input: "model/activation_4/Relu"
  input: "model/batch_normalization_3/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/batch_normalization_3/batchnorm/ReadVariableOp_2/resource"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        tensor_content: "H\2444\277Q\212W\277f\252(\277bi?\277I\363\025\277\346I/\277t\304!\277\347\2661?w\203\026?\022\230S\277w.#?</&\277=\363\030?\302#H\277j_U\277\004F\022\277"
      }
    }
  }
}
node {
  name: "model/batch_normalization_3/batchnorm/ReadVariableOp_2"
  op: "Identity"
  input: "model/batch_normalization_3/batchnorm/ReadVariableOp_2/resource"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/batch_normalization_3/batchnorm/ReadVariableOp_1/resource"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        tensor_content: "\266\206\031A+\353\204@\357:\327@y\336MA\024\010\001@\352\225\205@\266\330\340@y\302m;\373\001\336:\302dc@;\375\203:X\240;A\036\304\353>Xy\\@@2JA\260m\177@"
      }
    }
  }
}
node {
  name: "model/batch_normalization_3/batchnorm/ReadVariableOp_1"
  op: "Identity"
  input: "model/batch_normalization_3/batchnorm/ReadVariableOp_1/resource"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/batch_normalization_3/batchnorm/mul_2"
  op: "Mul"
  input: "model/batch_normalization_3/batchnorm/ReadVariableOp_1"
  input: "model/batch_normalization_3/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/batch_normalization_3/batchnorm/sub"
  op: "Sub"
  input: "model/batch_normalization_3/batchnorm/ReadVariableOp_2"
  input: "model/batch_normalization_3/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/batch_normalization_3/batchnorm/add_1"
  op: "AddV2"
  input: "model/batch_normalization_3/batchnorm/mul_1"
  input: "model/batch_normalization_3/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/dense_3/MatMul/ReadVariableOp/resource"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
        tensor_content: "q\211\037@.\352\332?\364,#@\347\360\035@\212\347,@\354\335!@\201w\030@\2669\227\277\205[\344\277\312\311\033@\207\250\221\277ID\036@E\221B\300\245z\330?\263^\023@\371!\004@"
      }
    }
  }
}
node {
  name: "model/dense_3/MatMul/ReadVariableOp"
  op: "Identity"
  input: "model/dense_3/MatMul/ReadVariableOp/resource"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/dense_3/MatMul"
  op: "MatMul"
  input: "model/batch_normalization_3/batchnorm/add_1"
  input: "model/dense_3/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "model/dense_3/BiasAdd/ReadVariableOp/resource"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: -0.38822504878
      }
    }
  }
}
node {
  name: "model/dense_3/BiasAdd/ReadVariableOp"
  op: "Identity"
  input: "model/dense_3/BiasAdd/ReadVariableOp/resource"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/dense_3/BiasAdd"
  op: "BiasAdd"
  input: "model/dense_3/MatMul"
  input: "model/dense_3/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Identity"
  op: "Identity"
  input: "model/dense_3/BiasAdd"
  input: "^model/batch_normalization/batchnorm/ReadVariableOp"
  input: "^model/batch_normalization/batchnorm/ReadVariableOp_1"
  input: "^model/batch_normalization/batchnorm/ReadVariableOp_2"
  input: "^model/batch_normalization/batchnorm/mul/ReadVariableOp"
  input: "^model/batch_normalization_1/batchnorm/ReadVariableOp"
  input: "^model/batch_normalization_1/batchnorm/ReadVariableOp_1"
  input: "^model/batch_normalization_1/batchnorm/ReadVariableOp_2"
  input: "^model/batch_normalization_1/batchnorm/mul/ReadVariableOp"
  input: "^model/batch_normalization_2/batchnorm/ReadVariableOp"
  input: "^model/batch_normalization_2/batchnorm/ReadVariableOp_1"
  input: "^model/batch_normalization_2/batchnorm/ReadVariableOp_2"
  input: "^model/batch_normalization_2/batchnorm/mul/ReadVariableOp"
  input: "^model/batch_normalization_3/batchnorm/ReadVariableOp"
  input: "^model/batch_normalization_3/batchnorm/ReadVariableOp_1"
  input: "^model/batch_normalization_3/batchnorm/ReadVariableOp_2"
  input: "^model/batch_normalization_3/batchnorm/mul/ReadVariableOp"
  input: "^model/conv1d/BiasAdd/ReadVariableOp"
  input: "^model/conv1d/conv1d/ExpandDims_1/ReadVariableOp"
  input: "^model/conv1d_1/BiasAdd/ReadVariableOp"
  input: "^model/conv1d_1/conv1d/ExpandDims_1/ReadVariableOp"
  input: "^model/dense/BiasAdd/ReadVariableOp"
  input: "^model/dense/MatMul/ReadVariableOp"
  input: "^model/dense_1/BiasAdd/ReadVariableOp"
  input: "^model/dense_1/MatMul/ReadVariableOp"
  input: "^model/dense_2/BiasAdd/ReadVariableOp"
  input: "^model/dense_2/MatMul/ReadVariableOp"
  input: "^model/dense_3/BiasAdd/ReadVariableOp"
  input: "^model/dense_3/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
versions {
  producer: 175
}
